

.. |nbsp| unicode:: 0xA0
   :trim:

.. !split

Advanced PDE models
%%%%%%%%%%%%%%%%%%%

This final chapter addresses more complicated PDE models, including
linear elasticity, viscous flow, heat transfer, porous media flow,
gas dynamics, and electrophysiology. A range of
classical dimensionless numbers are discussed in terms of the scaling.

.. _scale:elasticity:

The equations of linear elasticity
==================================

To the best of the authors' knowledge, it seems that mathematical
models in elasticity and structural analysis are almost never
non-dimensionalized. This is probably due to tradition, but the
following sections will demonstrate the usefulness of scaling also in
this scientific field.

We start out with the general, time-dependent elasticity PDE with
variable material properties. Analysis based on scaling is used to
determine with the acceleration term can be neglected. The stationary
elasticity PDE is then discussed, including the simplification to
homogeneous media. Scaling of different types of boundary conditions is
also treated.  At the end, we scale the equations of coupled
thermo-elasticity. All the models make the assumption of small
displacement gradients.

.. _scale:elasticity:timedep:

The general time-dependent elasticity problem
---------------------------------------------

The following vector PDE governs deformation and stress in purely elastic
materials, under the assumption of small displacement gradients:

.. _Eq:scale:elasticity:PDE1:

.. math::

    \tag{170}
    \varrho\frac{\partial^2\boldsymbol{u}}{\partial t^2} =
        \nabla ((\lambda + \mu)\nabla\cdot\boldsymbol{u}) + \nabla\cdot(\mu\nabla\boldsymbol{u}) +
        \varrho\boldsymbol{f}{\thinspace .}
        
        

Here, :math:`\boldsymbol{u}` is the displacement vector,
:math:`\varrho` is the density of the material, :math:`\lambda` and :math:`\mu` are
the Lame elasticity parameters, and :math:`\boldsymbol{f}` is a body force (gravity,
centrifugal force, or similar).

We introduce dimensionless variables:

.. math::
         \bar\boldsymbol{u} = u_c^{-1}\boldsymbol{u},\quad \bar x = \frac{x}{L},\quad \bar t = \frac{f}{t_c},

where :math:`L` is some length scale we used to scale :math:`y` and :math:`z` as well.
Also the elasticity parameters and the density can be scaled, if they
are not constants,

.. math::
         \bar\lambda = \frac{\lambda}{\lambda_c},\quad
        \bar\mu = \frac{\mu}{\mu_c},\quad
        \bar\varrho = \frac{\varrho}{\varrho_c},

where the characteristic quantities are typically spatial maximum values of
the functions:

.. math::
         \lambda_c = \max_{x,y,z}\lambda,\quad
        \mu_c = \max_{x,y,z}\mu,\quad
        \varrho_c = \max_{x,y,z}\varrho{\thinspace .}

Finally, we scale :math:`\boldsymbol{f}` too (if not constant):

.. math::
         \bar\boldsymbol{f} = f_c^{-1}\boldsymbol{f},\quad f_c = \max_{x,y,z,t}||\boldsymbol{f}||{\thinspace .}

Inserting the dimensionless quantities in the governing vector PDE results in

.. math::
        
        \frac{\varrho_c u_c}{t_c^2}
        \frac{\partial^2\bar \boldsymbol{u}}{\partial \bar t^2} =
        L^{-2}u_c\bar \nabla ((\lambda_c\bar\lambda +
        \mu_c\bar\mu)\bar \nabla\cdot\bar \boldsymbol{u}) +
        L^{-2}u_c\mu_c\bar \nabla\cdot(\bar \mu\bar \nabla\bar \boldsymbol{u}) +
        \varrho_cf_c\bar\varrho\bar\boldsymbol{f}{\thinspace .}
        

Making the terms non-dimensional gives the equation

.. _Eq:_auto43:

.. math::

    \tag{171}
    \bar\varrho\frac{\partial^2\bar \boldsymbol{u}}{\partial \bar t^2} =
        \frac{t_c^2\lambda_c}{L^2\varrho_c}
        \bar \nabla (\bar\lambda\bar\nabla\cdot\bar u) +
        \frac{t_c^2\mu_c}{L^2\varrho_c}
        \bar\nabla(\bar\mu \bar\nabla\cdot\bar \boldsymbol{u}) +
        \frac{t_c^2\mu_c}{L^2\varrho_c}\bar \nabla\cdot(\bar \mu\bar \nabla\bar \boldsymbol{u}) +
        \frac{t_c^2f_c}{u_c}\bar\varrho\bar\boldsymbol{f}{\thinspace .}
        
        

We may choose :math:`t_c` to make the coefficient in front of any of the spatial
derivative terms equal unity. Here we choose the :math:`\mu` term, which implies

.. math::
         t_c = L\sqrt{\frac{\varrho_c}{\mu_c}}{\thinspace .}

The scale for :math:`\boldsymbol{u}` can be chosen from an initial displacement or by
making the coefficient in front of the :math:`\bar\boldsymbol{f}` term unity. The latter
means

.. math::
         u_c = \mu_c^{-1}f_cL^2\varrho_c{\thinspace .}

The resulting dimensionless PDE becomes

.. _Eq:_auto44:

.. math::

    \tag{172}
    \bar\varrho\frac{\partial^2\bar \boldsymbol{u}}{\partial \bar t^2} =
        \bar \nabla ((\beta\bar\lambda + \bar\mu)\bar\nabla\cdot\bar u) +
        \bar \nabla\cdot(\bar \mu\bar \nabla\bar \boldsymbol{u}) +
        \bar\varrho\bar\boldsymbol{f}{\thinspace .}
        
        

The only dimensionless parameter is

.. math::
         \beta = \frac{\lambda_c}{\mu_c}{\thinspace .}

If the source term is absent, we must use the initial condition or
a known boundary displacement to
determine :math:`u_c`.

Software          (8)
~~~~~~~~~~~~~~~~~~~~~

Given software for :ref:`(170) <Eq:scale:elasticity:PDE1>`,
we can simulate the dimensionless problem by setting :math:`\varrho =\bar\varrho`,
:math:`\lambda =\beta\bar\lambda`, and :math:`\mu = \bar\mu`.

[**hpl 19**: What about setting boundary conditions?]

.. _scale:elasticity:PDE1:stress:

Dimensionless stress tensor
---------------------------

The stress tensor :math:`\boldsymbol{\sigma}` is a key quantity in elasticity and is given by

.. math::
         \boldsymbol{\sigma} = \lambda\nabla\cdot\boldsymbol{u}\boldsymbol{I} + \mu(\nabla\boldsymbol{u} + (\nabla\boldsymbol{u})^T){\thinspace .}

This :math:`\boldsymbol{\sigma}` can be computed as soon as the PDE problem for :math:`\boldsymbol{u}`
has been solved.
Inserting dimensionless variables on the right-hand side of the above
relation gives

.. math::
        
        \boldsymbol{\sigma} &= \lambda_cu_cL^{-2}\bar\lambda\bar\nabla\cdot\bar\boldsymbol{u}
        + \mu_cu_cL^{-1}\bar\mu(\bar\nabla\bar\boldsymbol{u} + (\bar\nabla\bar\boldsymbol{u})^T)\\ 
        &= \mu_c u_cL^{-1}\left(\beta\bar\lambda\bar\nabla\cdot\bar\boldsymbol{u} +
        \bar\mu(\bar\nabla\bar\boldsymbol{u} + (\bar\nabla\bar\boldsymbol{u})^T)\right){\thinspace .}
        

The coefficient on the right-hand side, :math:`\mu_c u_cL^{-1}`, has dimension
of stress, since (according to the second table in
the section :ref:`scale:dimunit:tables`) :math:`[\hbox{M}\hbox{T}^{-2}\hbox{L}^{-1})(\hbox{L})(\hbox{L}^{-1})]
=[\hbox{M}\hbox{T}^{-2}\hbox{L}^{-1}]`, which is the dimension of stress.
The quantity :math:`\mu_c u_cL^{-1}` is therefore the natural scale of the
stress tensor:

.. math::
         \bar\boldsymbol{\sigma} = \frac{\boldsymbol{\sigma}}{\sigma_c},\quad \sigma_c = \mu_c u_c L^{-1},

and we have the dimensionless stress-displacement relation

.. _Eq:_auto45:

.. math::

    \tag{173}
    \bar\boldsymbol{\sigma} =
        \beta\bar\lambda\bar\nabla\cdot\bar\boldsymbol{u} +
        \bar\mu(\bar\nabla\bar\boldsymbol{u} + (\bar\nabla\bar\boldsymbol{u})^T){\thinspace .}
        
        

.. _scale:elasticity:waves:

When can the acceleration term be neglected?
--------------------------------------------

A lot of applications of the elasticity equation involves static or
quasi-static deformations where the acceleration term
:math:`\varrho\boldsymbol{u}_{tt}` is neglected. Now we shall see under which conditions
the quasi-static approximation holds.

The further discussion will need to look into the time scales of
elastic waves, because it turns out that the chosen :math:`t_c` above is
closely linked to the propagation speed of elastic waves in a
homogeneous body without body forces.  A relevant model for
such waves has constant
:math:`\varrho`, :math:`\lambda`, and :math:`\mu`, and no force term:

.. _Eq:scale:elasticity:waves:eq:

.. math::

    \tag{174}
    \varrho\frac{\partial^2\boldsymbol{u}}{\partial t^2} =
        (\lambda + \mu)\nabla \nabla\cdot\boldsymbol{u} + \mu\nabla^2\boldsymbol{u}{\thinspace .}
        
        

S waves
~~~~~~~

Let us take the curl of this PDE and notice
that the curl of a  gradient vanishes. The result is

.. math::
        \frac{\partial^2}{\partial t^2}\nabla\times\boldsymbol{u} = c_S^2\nabla^2\nabla\times\boldsymbol{u},

i.e., a wave equation for :math:`\nabla\times\boldsymbol{u}`. The wave velocity is

.. math::
         c_S = \sqrt{\frac{\mu}{\varrho}}{\thinspace .}

The corresponding waves are called
`S waves <https://en.wikipedia.org/wiki/S-wave>`__. The curl of a
displacement field is closely related to rotation of continuum elements.
S waves are therefore rotation waves, also sometimes referred to as
shear waves.

The divergence of a displacement field can be interpreted as the
volume change of continuum elements. Suppose this volume change vanishes,
:math:`\nabla\cdot\boldsymbol{u} = 0`, which means that the material is incompressible.
The elasticity equation then simplifies to

.. math::
        \frac{\partial^2 \boldsymbol{u}}{\partial t^2} = c_S^2\nabla^2\boldsymbol{u},

so each component of
the displacement field in this case also propagates as a wave
with speed :math:`c_S^2`.
The time it takes for such a wave to travel one characteristic length
:math:`L` is :math:`L/c_S`, i.e., :math:`L\sqrt{\varrho/\mu}`, which is nothing but
our characteristic time :math:`t_c`.

P waves
~~~~~~~

We may take the divergence of the PDE instead and notice that :math:`\nabla\cdot\nabla
=\nabla^2` so

.. math::
        \frac{\partial^2}{\partial t^2}\nabla\cdot\boldsymbol{u} = c_P^2\nabla^2\nabla\cdot\boldsymbol{u},

with wave velocity

.. math::
         c_P = \sqrt{\frac{\lambda +2\mu}{\varrho}}{\thinspace .}

That is, the volume change (expansion/compression)
propagates as a wave with speed :math:`c_P`.
These type of waves are called `P waves <https://en.wikipedia.org/wiki/P-wave>`__. Other names are pressure and expansion/compression waves.

Suppose now that :math:`\nabla\times\boldsymbol{u} =0`, i.e., there is no rotation ("shear") of
continuum elements. Mathematically this condition implies that
:math:`\nabla^2\boldsymbol{u} = \nabla(\nabla\cdot\boldsymbol{u})` (see any book on vector calculus
or `Wikipedia <https://en.wikipedia.org/wiki/Vector_calculus_identities>`__).
Our model equation :ref:`(174) <Eq:scale:elasticity:waves:eq>` then reduces to

.. math::
         \frac{\partial^2\boldsymbol{u}}{\partial t^2} = c_P^2\nabla^2\boldsymbol{u},

which is nothing but a wave equation for each component of the
displacement field.

Time-varying load
~~~~~~~~~~~~~~~~~

Suppose we have some time-varying boundary condition on :math:`\boldsymbol{u}` or the
stress vector (traction) that has time scale :math:`\omega` (some
oscillating movement that goes like :math:`\sin\omega t` is an example). We
choose :math:`t_c=1/\omega`.  The scaling now leads to

.. math::
        
        \gamma
        \frac{\partial^2\bar \boldsymbol{u}}{\partial \bar t^2} =
        \bar \nabla ((\beta\bar\lambda +
        \bar\mu)\bar \nabla\cdot\bar \boldsymbol{u}) +
        \bar \nabla\cdot(\bar \mu\bar \nabla\bar \boldsymbol{u}) +
        \bar\varrho\bar\boldsymbol{f}{\thinspace .}
        

where we have set

.. math::
         u_c = \mu_c^{-1}f_cL^2\varrho_c,

as before, and :math:`\gamma` is a new dimensionless number,

.. math::
         \gamma = \frac{\varrho_cL^2 \omega^2}{\mu_c} =
        \left(\frac{L\sqrt{\varrho_c/\mu_c}}{1/\omega}\right)^2{\thinspace .}

The last rewrite shows that :math:`\sqrt{\gamma}` is the ratio of
the time scale for S waves and the time scale for the forced
movement on the boundary. The acceleration term can therefore
be neglected when :math:`\gamma\ll 1`, i.e., when the time scale
for movement on the boundary is much larger than the time it
takes for the S waves to travel through the domain.
Since the velocity of S waves in solids is very large and
the time scale correspondingly small, :math:`\gamma\ll 1`
is very often the case in applications involving structural analysis.
:ref:`scale::exer:elasticity:vibmodels` explores related
models and asks for comparisons of time scales for waves and
mechanical vibrations in structures.

.. _scale:elasticity:stationary:

The stationary elasticity problem
---------------------------------

Scaling of the PDE
~~~~~~~~~~~~~~~~~~

We now look at the stationary version of
:ref:`(170) <Eq:scale:elasticity:PDE1>` where the :math:`\varrho\boldsymbol{u}_{tt}` term is
removed. The first step in the scaling is just inserting the
dimensionless variables:

.. math::
        
        0 =
        L^{-2}u_c\bar \nabla ((\lambda_c\bar\lambda +
        \mu_c\bar\mu)\bar \nabla\cdot\bar \boldsymbol{u}) +
        L^{-2}u_c\mu_c\bar \nabla\cdot(\bar \mu\bar \nabla\bar \boldsymbol{u}) +
        \varrho_cf_c\bar\varrho\bar\boldsymbol{f}{\thinspace .}
        

Dividing by :math:`L^2u_c\mu_c` gives

.. math::
        
        0 =
        \bar \nabla ((\beta\bar\lambda +
        \bar\mu)\bar \nabla\cdot\bar \boldsymbol{u}) +
        \bar \nabla\cdot(\bar \mu\bar \nabla\bar \boldsymbol{u}) +
        \frac{L^2\varrho_cf_c}{u_c\mu_c}\bar\varrho\bar\boldsymbol{f}{\thinspace .}
        

Choosing :math:`u_c = \varrho L^2f_c/\mu_c` as before leads to

.. _Eq:_auto46:

.. math::

    \tag{175}
    \bar \nabla ((\beta\bar\lambda +
        \bar\mu)\bar \nabla\cdot\bar \boldsymbol{u}) +
        \bar \nabla\cdot(\bar \mu\bar \nabla\bar \boldsymbol{u}) +
        \bar\varrho\bar\boldsymbol{f} = 0{\thinspace .}
        
        

A homogeneous material with constant :math:`\lambda`, :math:`\mu`, and :math:`\varrho`
is an interesting case (this corresponds to :math:`\mu_c=\mu`, :math:`\lambda_c=\lambda`,
:math:`\varrho_c=\varrho`, :math:`\bar\varrho=\bar\lambda=\bar\mu=1`):

.. _Eq:_auto47:

.. math::

    \tag{176}
    (1+\beta)\bar \nabla(\bar \nabla\cdot\bar \boldsymbol{u}) +
        \bar \nabla^2\bar \boldsymbol{u}) +
        \bar\boldsymbol{f} = 0{\thinspace .}
        
        

Now :math:`\beta` is defined as

.. math::
         \beta = \frac{\lambda}{\mu} = \left(\frac{c_p}{c_s}\right)^2 - 2{\thinspace .}

It shows that in standard, stationary elasticity, :math:`\lambda/\mu` is the
only significant physical parameter.

Scaling of displacement boundary conditions
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

A typical boundary condition on a part of the boundary is a prescribed
displacement. For simplicity we set :math:`\boldsymbol{u} = \boldsymbol{U}_0` for a constant vector
:math:`\boldsymbol{U}_0` as boundary condition. With :math:`u_c=\varrho L^2f_c/\mu`, we get
the dimensionless condition

.. math::
         \bar\boldsymbol{u} = \frac{\boldsymbol{U}_0}{u_c} = \frac{\mu \boldsymbol{U}_0}{\varrho L^2f_c}{\thinspace .}

In the absence of body forces, the expression for :math:`u_c` has no
meaning (:math:`f_c=0`), so then :math:`u_c = |\boldsymbol{U}_0|` is a better choice.
This gives the dimensionless boundary condition

.. math::
         \bar u = \frac{\boldsymbol{U}_0}{|\boldsymbol{U}_0|},

which is the unit vector in the direction of :math:`\boldsymbol{U}_0`. The new :math:`u_c`
changes the coefficient in front of the body force term, if that term
is present, to the dimensionless number

.. math::
         \delta = \frac{L^2\varrho f_c}{\mu |\boldsymbol{U}_0|}{\thinspace .}

Scaling of traction boundary conditions
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The other type of common boundary condition in elasticity is a
prescribed traction (stress vector) on a part of the boundary:

.. math::
         \boldsymbol{\sigma}\cdot\boldsymbol{n} = \boldsymbol{T}_0,

where for simplicity we take :math:`\boldsymbol{T}_0` as a constant vector.
From the section :ref:`scale:elasticity:PDE1:stress` we have a stress scale
:math:`\sigma_c = \mu u_c/L`, but we may alternatively use :math:`|\boldsymbol{T}_0|`
as stress scale. In that case,

.. math::
         \bar\boldsymbol{\sigma}\cdot\boldsymbol{n} = \frac{\boldsymbol{T}_0}{|\boldsymbol{T}_0|},

which is a unit vector in the direction of :math:`\boldsymbol{T}_0`.
Many applications involve large traction free areas on the boundary, on
which we simply have :math:`\bar\boldsymbol{\sigma}\cdot\boldsymbol{n} = 0`.

.. _scale:elasticity:thermo:

Quasi-static thermo-elasticity
------------------------------

.. index:: thermo-elasticity

Heating solids give rise to expansion, i.e., strains, which may cause
stress if displacements are constrained. The time scale of temperature
changes are usually much larger than the time scales of elastic waves,
so the stationary equations of elasticity can be used, but a term
depends on the temperature, so the equations must be coupled to
a PDE for heat transfer in solids. The resulting system of PDE is
known as the equations of *thermo-elasticity* and reads

.. _Eq:_auto48:

.. math::

    \tag{177}
    \nabla((\lambda + \mu)\nabla\cdot\boldsymbol{u}) + \nabla\cdot(\mu\nabla\boldsymbol{u}) = \alpha\nabla T -\varrho\boldsymbol{f},
        
        

.. _Eq:_auto49:

.. math::

    \tag{178}
    \varrho c \frac{\partial T}{\partial t} = \nabla\cdot(\kappa\nabla T) + \varrho \boldsymbol{f}_T,
        
        

where :math:`T` is the temperature, :math:`\alpha` is a coefficient of thermal expansion,
:math:`c` is a heat capacity, :math:`\kappa` is the heat conduction coefficient,
and :math:`\boldsymbol{f}_T` is some heat source. The density :math:`\varrho` is strictly speaking
a function of :math:`T` and the stress state, but a widely used approximation
is to consider :math:`\varrho` as a constant.
Most thermo-elasticity applications have
:math:`\boldsymbol{f}_T=0` so we drop this term. Most applications also involve some heating
from a temperature level :math:`T_0` to some level :math:`T_0 +\Delta T`.
A suitable scaling for :math:`T` is therefore

.. math::
         \bar T = \frac{T-T_0}{\Delta T},

so that :math:`\bar T\in [0,1]`. The elasticity equation has already been scaled
and so has the diffusion equation for :math:`T`. We base the time scale on
the diffusion, i.e., the thermal conduction process:

.. math::
         t_c = \varrho c L^2/\kappa_c{\thinspace .}

We imagine that :math:`\kappa` is scaled as :math:`\bar\kappa = \kappa/\kappa_c`.
The dimensionless PDE system then becomes

.. _Eq:_auto50:

.. math::

    \tag{179}
    \bar \nabla((1+\beta)\bar\mu\bar\nabla\cdot\bar\boldsymbol{u}) + \bar\nabla\cdot(\bar\mu\bar\nabla\bar\boldsymbol{u}) = \bar\nabla\bar T
        -\epsilon\bar\varrho\bar\boldsymbol{f},
        
        

.. _Eq:_auto51:

.. math::

    \tag{180}
    \frac{\partial \bar T}{\partial \bar t} = \bar \nabla\cdot(\bar\kappa\bar\nabla\bar T){\thinspace .}
        
        

Here we have chosen :math:`u_c` such that
the "heating source term" has a unit coefficient, acknowledging that
this thermal expansion balances the stress terms with :math:`\bar\boldsymbol{u}`. The
corresponding displacement scale is

.. math::
         u_c = \frac{\alpha L\Delta T}{\mu_c}{\thinspace .}

The dimensionless number in the body force term is therefore

.. math::
         \epsilon = \frac{L\varrho_c f_c}{\alpha \Delta T},

which measures the ratio of the body force term and the "heating source
term".

A homogeneous body with constant :math:`\varrho`, :math:`\lambda`, :math:`\mu`, :math:`c`, and :math:`\kappa`
is common. The PDE system reduces in this case to

.. _Eq:_auto52:

.. math::

    \tag{181}
    \bar \nabla((1+\beta)\bar\nabla\cdot\bar\boldsymbol{u}) + \bar\nabla^2\bar\boldsymbol{u}) = \bar\nabla\bar T -\epsilon\bar\boldsymbol{f},
        
        

.. _Eq:_auto53:

.. math::

    \tag{182}
    \frac{\partial \bar T}{\partial \bar t} = \bar \nabla^2\bar T{\thinspace .}
        
        

In the absence of body forces, :math:`\beta` is again the key parameter.

The boundary conditions for thermo-elasticity consist of the conditions
for elasticity and the conditions
for diffusion. Scaling of such conditions are discussed in
the section :ref:`sec:scale:diffu` and :ref:`scale:elasticity:stationary`.

.. _sec:scale:ns:

The Navier-Stokes equations
===========================

.. index:: Navier-Stokes equations

This section presents scalings of various versions of the
equations governing incompressible viscous fluid flow. We start
with the plain Navier-Stokes equations without body forces and
progress with adding the gravity force and a free surface. We
also look at scaling low Reynolds number flow and oscillating flows.

The momentum equation without body forces
-----------------------------------------

.. index:: dimensionless number

.. index:: Reynolds number

The Navier-Stokes equations for incompressible viscous fluid flow
without body forces take the form

.. _Eq:scale:fluid:NS:eq:momentum:

.. math::

    \tag{183}
    \varrho\left(\frac{\partial \boldsymbol{u}}{\partial t} + \boldsymbol{u}\cdot\nabla\boldsymbol{u}\right)
        = -\nabla p + \mu\nabla^2\boldsymbol{u},
        
        

.. _Eq:scale:fluid:NS:eq:cont:

.. math::

    \tag{184}
    \nabla\cdot\boldsymbol{u}  = 0{\thinspace .}
        
        

The primary unknowns are the
velocity :math:`\boldsymbol{u}` and the pressure :math:`p`. Moreover,
:math:`\varrho` is the fluid density, and :math:`\mu` is the dynamic viscosity.

Scaling          (8)
~~~~~~~~~~~~~~~~~~~~

We introduce as usual dimensionless independent and dependent variables:

.. math::
         \bar x = \frac{x}{L},\quad \bar y = \frac{y}{L},\quad
        \bar z= \frac{z}{L},\quad \bar t = \frac{t}{t_c},\quad
        \bar\boldsymbol{u} = \frac{\boldsymbol{u}}{u_c},\quad \bar p = \frac{p}{p_c},

where :math:`L` is some characteristic distance,
:math:`t_c` is some characteristic time, :math:`u_c` is a characteristic
velocity, and :math:`p_c` is a characteristic pressure.
Inserted in the equations,

.. _Eq:scale:fluid:NS:eq:momentum_d0:

.. math::

    \tag{185}
    \varrho\left(\frac{u_c}{t_c}\frac{\partial \bar\boldsymbol{u}}{\partial \bar t} + \frac{u_c^2}{L}\bar\boldsymbol{u}\cdot\bar\nabla\bar\boldsymbol{u}\right)
        = -\frac{p_c}{L}\bar\nabla\bar p + \frac{u_c}{L^2}\mu\bar \nabla^2\bar\boldsymbol{u},
        
        

.. _Eq:scale:fluid:NS:eq:cont_d0:

.. math::

    \tag{186}
    \frac{u_c}{L}\bar\nabla\cdot\bar\boldsymbol{u}  = 0{\thinspace .}
        
        

For the velocity it is common to just introduce some :math:`U` for
:math:`u_c`. This :math:`U` is normally implied by the problem description.
For example, in the flow configuration below, with flow over a bump,
we have some incoming
flow with a profile :math:`v(y)` and :math:`U` can typically be chosen as
:math:`U=\max_y v(y)`. The height of the bump influences the wake behind
the bump, so a natural length scale is :math:`\alpha`. For numerical
simulations in a domain of finite extent, :math:`W` must be
large enough to avoid feedback on the inlet profile, and :math:`L_c` must be
large enough for the type of outflow boundary condition used.
Ideally, :math:`W,L_c\rightarrow\infty`, so none of these parameters are
useful as length scales.

[**hpl 20**: Geir, check this formulation for choice of length scale.]
[**Geir 21**: :math:`L` cannot be used as both down-wind length of computational domain and general length scale. Could not change the :math:`L` on the figure, as it is part of the pdf. A little uncertain concerning the check -- it looks mostly fine. The profile may have a length cale (as implicit in the figur). It may also be beneficial to have a spanwise limit of the computational domain in the figure ?]

| 
| 

.. figure:: flow_over_gaussian.png
   :width: 500

| 
| 

For flow in a channel or tube, we also have some inlet profile, e.g.,
:math:`v(r)` in a tube, where :math:`r` is the radial coordinate, and a natural
choice of characteristic velocity is :math:`U=v(0)` or the average flow

.. math::
         U = \frac{1}{R}\int_0^R v(r)dr,

if :math:`R` is the radius of the tube. Other examples may be flow around
a body, where there is some distant constant inlet flow :math:`\boldsymbol{u} = U_0\boldsymbol{i}`,
for instance, and :math:`U=U_0` is an obvious choice. We therefore
assume that the flow problem comes with a natural candidate for :math:`U`.

Having a characteristic distance :math:`L` and velocity :math:`U`, an obvious
time measure is :math:`L/U` so we set :math:`t_c=L/U`. Dividing by the
coefficient in front of the time derivative term, creates a pressure
term

.. math::
         \frac{p_c}{\varrho U^2}\bar\nabla\bar p{\thinspace .}

The coefficient suggest a choice :math:`p_c=\varrho U^2` if the pressure
gradient term is to have the same size as the acceleration terms.
This :math:`p_c` is a very common pressure scale in fluid mechanics,
arising from Bernoulli's equation :math:`p + \frac{1}{2}\varrho \boldsymbol{u}\cdot\boldsymbol{u} =
\hbox{const}` for stationary flow.

.. index:: Reynolds number

Dimensonless PDEs and the Reynolds number
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The discussions so far results in the following dimensionless form of
:ref:`(183) <Eq:scale:fluid:NS:eq:momentum>` and :ref:`(184) <Eq:scale:fluid:NS:eq:cont>`:

.. _Eq:scale:fluid:NS:eq:momentum_d1:

.. math::

    \tag{187}
    \frac{\partial \bar\boldsymbol{u}}{\partial \bar t} +
        \bar\boldsymbol{u}\cdot\bar\nabla\bar\boldsymbol{u}
        = -\bar\nabla\bar p + \hbox{Re}^{-1}\nabla^2\boldsymbol{u},
        
        

.. _Eq:_auto54:

.. math::

    \tag{188}
    \bar\nabla\cdot \bar\boldsymbol{u} = 0,
        
        

where Re is the famous *Reynolds number*,

.. math::
         \hbox{Re}= \frac{\varrho UL}{\mu} = \frac{UL}{\nu}{\thinspace .}

The latter expression makes use of the kinematic viscosity :math:`\nu = \mu/\varrho`.
For viscous fluid flows without body forces there is hence only one
dimensionless number, Re.

The Reynolds number can be interpreted as the ratio of convection and
viscosity:

.. math::
         \frac{\hbox{convection}}{\hbox{viscosity}} =
        \frac{|\varrho\boldsymbol{u}\cdot\nabla\boldsymbol{u}|}{|\mu\nabla^2\boldsymbol{u}|}\sim
        \frac{\varrho U^2/L}{\mu U/L^2} =
        \frac{UL}{\nu} = \hbox{Re}{\thinspace .}

(We have here used that :math:`\nabla\boldsymbol{u}` goes like :math:`U/L` and :math:`\nabla^2\boldsymbol{u}`
goes like :math:`U/L^2`.)

.. index:: low Reynolds number flow

.. index:: Stokes problem

Scaling of time for low Reynolds numbers
----------------------------------------

As we discussed in the section :ref:`scale:convdiff` for the convection-diffusion
equation, there is not just one scaling that fits all problems.
Above, we used :math:`t_c=L/U`, which is appropriate if convection is
a dominating physical effect. In case the convection term
:math:`\varrho\boldsymbol{u}\cdot\nabla\boldsymbol{u}`
is much smaller
than the viscosity term :math:`\mu\nabla^2\boldsymbol{u}`, i.e., the Reynolds number
is small, the viscosity term is dominating. However,
if the scaling is suitable, the other terms are of order unity, and
:math:`\hbox{Re}^{-1}\nabla^2\bar\boldsymbol{u}` must then also be of unit size,
implying that :math:`\nabla^2\bar\boldsymbol{u}` is small, but then the scaling is
not suitable. In the low-Reynolds number regime, the diffusion effect
of :math:`\nabla^2\bar\boldsymbol{u}` is dominating, and we should use a time scale
based on diffusion rather than convection. Such a time scale is
:math:`t_c = L^2/(\mu/\varrho) = L^2/\nu`.
With this time scale, the dimensionless Navier-Stokes equations look like

.. _Eq:scale:fluid:NS:eq:momentum_d2:

.. math::

    \tag{189}
    \frac{\partial \bar\boldsymbol{u}}{\partial \bar t} +
        \hbox{Re}\,\bar\boldsymbol{u}\cdot\bar\nabla\bar\boldsymbol{u}
        = -\bar\nabla p + \nabla^2\boldsymbol{u},
        
        

.. _Eq:_auto55:

.. math::

    \tag{190}
    \bar\nabla\cdot\bar\boldsymbol{u} = 0{\thinspace .}
        
        

As stated in the box in the section :ref:`scale:convdiff`, :ref:`(189) <Eq:scale:fluid:NS:eq:momentum_d2>` is the appropriate PDE for very low Reynolds number flow and
suggests neglecting the convection term.
If the flow is also steady, the time derivative term can be neglected,
and we end up with the so-called *Stokes problem* for steady, slow, viscous
flow:

.. _Eq:scale:fluid:NS:eq:momentum_d3:

.. math::

    \tag{191}
    -\bar\nabla p + \nabla^2\boldsymbol{u} = 0,
        
        

.. _Eq:_auto56:

.. math::

    \tag{192}
    \bar\nabla\cdot\bar\boldsymbol{u} = 0{\thinspace .}
        
        

This flow regime is also known as *Stokes' flow* or *creeping flow*.

.. index:: Stokes' flow

.. index:: Froude number

.. index:: creeping flow

Shear stress as pressure scale
------------------------------

Instead of using the kinetic energy :math:`\varrho U^2` as pressure scale,
one can use the shear stress :math:`\mu U/L` (:math:`U/L` reflects the spatial
derivative of the velocity, which enters the shear stress expression
:math:`\mu\partial u/\partial y`). Using :math:`U` as velocity scale, :math:`L/U` as
time scale, and :math:`\mu U/L` as pressure scale, results in

.. _Eq:_auto57:

.. math::

    \tag{193}
    \hbox{Re}\left(\frac{\partial \bar\boldsymbol{u}}{\partial \bar t} +
        \bar\boldsymbol{u}\cdot\bar\nabla\bar\boldsymbol{u}\right)
        = -\bar\nabla\bar p + \nabla^2\bar\boldsymbol{u}{\thinspace .}
        
        

Low Reynolds number flow now suggests neglecting both acceleration terms.

Gravity force and the Froude number
-----------------------------------

We now add a gravity force to the momentum equation
:ref:`(183) <Eq:scale:fluid:NS:eq:momentum>`:

.. _Eq:scale:fluid:NS:eq:momentum_g:

.. math::

    \tag{194}
    \varrho\left(\frac{\partial \boldsymbol{u}}{\partial t} + \boldsymbol{u}\cdot\nabla\boldsymbol{u}\right)
        = -\nabla p + \mu\nabla^2\boldsymbol{u} - \varrho g\boldsymbol{k},
        
        

where :math:`g` is the acceleration of gravity, and :math:`\boldsymbol{k}` is a unit
vector in the opposite direction of gravity. The new term
takes the following form after non-dimensionalization:

.. math::
         \frac{t_c}{\varrho  u_c}\varrho g \boldsymbol{k} =  \frac{Lg}{U^2}\boldsymbol{k}
        = \hbox{Fr}^{-2}\boldsymbol{k},

where Fr is the dimensionless Froude number,

.. math::
         \hbox{Fr} = \frac{U}{\sqrt{Lg}}{\thinspace .}

This quantity reflects the ratio of inertia and gravity forces:

.. math::
         \frac{|\boldsymbol{u}\cdot\nabla\boldsymbol{u}|}{|\varrho g|} \sim \frac{\varrho U^2/L}{\varrho g}
        = \hbox{Fr}^2{\thinspace .}

Oscillating boundary conditions and the Strouhal number
-------------------------------------------------------

.. index:: Strouhal number

Many flows have an oscillating nature, often arising from some
oscillating boundary condition. Suppose such a condition at some
boundary :math:`x=\hbox{const}` takes the specific form

.. math::
         \boldsymbol{u} = U\sin(\omega t)\boldsymbol{i}{\thinspace .}

The dimensionless counterpart becomes

.. math::
         U\bar\boldsymbol{u} = U\sin(\omega \frac{L}{U}\bar t)\boldsymbol{i},

if :math:`t_c=L/U` is the appropriate time scale. This condition can be
written

.. _Eq:_auto58:

.. math::

    \tag{195}
    \bar\boldsymbol{u} = \sin(\hbox{St}\,\bar t),
        
        

where St is the *Strouhal number*,

.. _Eq:_auto59:

.. math::

    \tag{196}
    \hbox{St} = \frac{\omega L}{U}{\thinspace .}
        
        

The two important dimensionless parameters in oscillating flows are
then the Reynolds and Strouhal numbers.

.. index:: vortex shedding

Even if the boundary conditions
are of steady type, as for flow around a sphere or cylinder,
the flow may at certain Reynolds numbers get unsteady and oscillating.
For :math:`10^2 < \hbox{Re} < 10^7`, steady inflow towards a cylinder will
cause vortex shedding: an array of vortices are periodically shedded
from the cylinder, producing an oscillating flow pattern and force
on the cylinder. The Strouhal number is used to characterize the
frequency of oscillations. The phenomenon, known as *von Karman
vortex street*, is particularly important if the frequency
of the force on the cylinder hits the free vibration frequency
of the cylinder such that resonance occurs. The result can be large
displacements of the cylinder and structural failure. A famous
case in engineering is the failure of the `Tacoma Narrows suspension
bridge <https://en.wikipedia.org/wiki/Tacoma_Narrows_Bridge_(1940)>`__
in 1940, when wind-induced vortex shedding caused resonance
with the free torsional vibrations of the bridge.

.. index:: Euler number

Cavitation and the Euler number
-------------------------------

The dimensionless pressure in :ref:`(187) <Eq:scale:fluid:NS:eq:momentum_d1>`
made use of the pressure scale :math:`p_c=\varrho U^2`. This is an
appropriate scale if the pressure level is not of importance, which
is very often the case since only the pressure *gradient* enters
the flow equation and drives the flow. However, there are circumstances
where the pressure level is of importance. For example, in some flows
the pressure may become so low that the vapor pressure of the liquid
is reached and that vapor cavities form (a phenomenon known as
*cavitation*). A more appropriate pressure scale is then
:math:`p_c = p_{\infty} - p_v`, where :math:`p_\infty` is a characteristic
pressure level far from vapor cavities and :math:`p_v` is the vapor pressure.
The coefficient in front of the dimensionless pressure gradient is then

.. math::
         \frac{p_{\infty} - p_v}{\varrho U^2}{\thinspace .} 

Inspired by Bernoulli's equation
:math:`p + \frac{1}{2}\varrho \boldsymbol{u}\cdot\boldsymbol{u} =
\hbox{const}`
in fluid mechanics, a factor :math:`\frac{1}{2}` is often inserted in the
denominator. The corresponding dimensionless number,

.. _Eq:_auto60:

.. math::

    \tag{197}
    \hbox{Eu} = \frac{p_{\infty} - p_v}{\frac{1}{2}\varrho U^2},
        
        

is called the *Euler number*. The pressure gradient term now reads
:math:`\frac{1}{2}\hbox{Eu}\,\bar\nabla\bar p`. The Euler number
expresses the ratio of pressure differences and the kinetic
energy of the flow.

Free surface conditions and the Weber number
--------------------------------------------

At a free surface, :math:`z=\eta(x,y,t)`, the boundary conditions are

.. _Eq:_auto61:

.. math::

    \tag{198}
    w = \frac{\partial\eta}{\partial t} + \boldsymbol{u}\cdot\nabla\eta,
        
        

.. _Eq:scale:fluid:NS:surface_tension:

.. math::

    \tag{199}
    p - p_0  \approx
        -\sigma\left(\frac{\partial^2\eta}{\partial x^2} +
        \frac{\partial^2\eta}{\partial y^2}\right),
        
        

where :math:`w` is the velocity component in the :math:`z` direction,
:math:`p_0` is the atmospheric air pressure at the surface,
and :math:`\sigma` represents the surface tension.
The approximation in :ref:`(199) <Eq:scale:fluid:NS:surface_tension>` is valid
under small deformations of the surface.

.. index:: Weber number

The dimensionless form of these conditions starts with inserting the
dimensionless quantities in the equations:

.. math::
        
        u_c\bar w &= \frac{L}{t_c}
        \frac{\partial\bar\eta}{\partial\bar t} +
        u_c\bar\boldsymbol{u}\cdot\bar\nabla\bar\eta,\\ 
        p_c \bar p &\approx
        -\frac{1}{L}\sigma\left(\frac{\partial^2\bar\eta}{\partial \bar x^2} +
        \frac{\partial^2\bar\eta}{\partial \bar y^2}\right){\thinspace .}
        

The characteristic length :math:`L` is usually taken as the depth of the fluid
when the surface is flat. We have used
:math:`\bar p = (p - p_0)/p_c` for making the pressure dimensionless.
Using :math:`u_c=U`, :math:`t_c=L/U`, and :math:`p_c = \varrho U^2`, results in

.. _Eq:_auto62:

.. math::

    \tag{200}
    \bar w = \frac{\partial\bar\eta}{\partial\bar t} +
        \bar\boldsymbol{u}\cdot\bar\nabla\bar\eta,
        
        

.. _Eq:scale:fluid:NS:surface_tension2:

.. math::

    \tag{201}
    \bar p \approx
        - \hbox{We}^{-1}\left(\frac{\partial^2\bar\eta}{\partial \bar x^2} +
        \frac{\partial^2\bar\eta}{\partial \bar y^2}\right),
        
        

where We is the *Weber number*,

.. _Eq:_auto63:

.. math::

    \tag{202}
    \hbox{We} = \frac{\varrho U^2L}{\sigma}{\thinspace .}
        
        

The Weber number measures the importance of surface tension effects and
is the ratio of the pressure scale :math:`\varrho U^2` and the surface
tension force per area, typically :math:`\sigma/R_x` in a 2D problem, which
has size :math:`\sigma/L`.

Thermal convection
==================

Temperature differences in fluid flow cause density differences, and since
cold fluid is heavier than hot fluid, the gravity force will induce
flow due to density differences. This effect is called free thermal
convection. Forced convection refers to the case where there is no
feedback from the temperature field to the motion, i.e., temperature
differences do not create motion, and the temperature distribution
is only dependent on a given velocity field.

Forced convection
-----------------

.. index:: forced convection

.. index:: Peclet number

.. index:: Reynolds number

The model governing forced convection consists of the Navier-Stokes
equation and the energy equation for the temperature:

.. _Eq:scale:fluid:forced_convection:eq:momentum_T_forced:

.. math::

    \tag{203}
    \varrho\left(\frac{\partial \boldsymbol{u}}{\partial t} + \boldsymbol{u}\cdot\nabla\boldsymbol{u}\right)
        = -\nabla p + \mu\nabla^2\boldsymbol{u} - \varrho g\boldsymbol{k},
        
        

.. _Eq:scale:fluid:forced_convection:eq:cont_T_forced:

.. math::

    \tag{204}
    \nabla\cdot\boldsymbol{u}  = 0,
        
        

.. _Eq:scale:fluid:forced_convection:eq:energy_T_forced:

.. math::

    \tag{205}
    \varrho c\left(\frac{\partial T}{\partial t} + \boldsymbol{u}\cdot\nabla T\right)
        = \kappa\nabla^2 T {\thinspace .}
        
        

.. _Eq:_auto64:

.. math::

    \tag{206}
    The symbol :math:`T` is the temperature, :math:`c` is a heat capacity, and :math:`\kappa`
is the heat conduction coefficient for the fluid. The PDE system
applies primarily for liquids. For gases one may need a term
:math:`- p\nabla\cdot\boldsymbol{u}` for the pressure work in
:ref:`(205) <Eq:scale:fluid:forced_convection:eq:energy_T_forced>`
as well as a modified equation of continuity
:ref:`(204) <Eq:scale:fluid:forced_convection:eq:cont_T_forced>`.

Despite the fact that :math:`\varrho` depends on :math:`T`, we treat :math:`\varrho`
as a constant :math:`\varrho_0`. The major effect of the :math:`\varrho(T)`
dependence is through the
buoyancy effect caused by the gravity term :math:`-\varrho(T)g\boldsymbol{k}`.
It is common to drop this
term in forced convection,
and assume the momentum and continuity equations to be
independent of the temperature. The flow is driven by boundary
conditions (rather than density variations as in free convection),
from which we can find a characteristic velocity :math:`U`.

Dimensionless parameters are introduced as follows:

.. math::
         \bar x = \frac{x}{L},
        \ t_c = \frac{L}{U},\ 
        \bar\boldsymbol{u} = \frac{\boldsymbol{u}}{U},\ \bar p = \frac{p}{\varrho_0 U^2},\ 
        \bar T = \frac{T-T_0}{T_c}{\thinspace .}

Other coordinates are also scaled by :math:`L`.
The characteristic temperature :math:`T_c` is chosen as some range :math:`\Delta T`,
which depends on the problem and is often given by the
thermal initial and/or
boundary conditions. The reference temperature :math:`T_0` is also
implied by prescribed conditions.
Inserted in the equations, we get

.. math::
        
        \varrho_0\frac{U^2}{L}\frac{\partial \bar\boldsymbol{u}}{\partial \bar t} +
        \varrho_0\frac{U^2}{L}\bar \boldsymbol{u}\cdot\bar \nabla\bar\boldsymbol{u}
        &= -\frac{\varrho_0 U^2}{L}\bar\nabla \bar p + \frac{\mu U}{L^2}
        \bar \nabla^2\bar \boldsymbol{u},
        \\ 
        \frac{U}{L}\bar\nabla\cdot\bar\boldsymbol{u} & = 0,
        \\ 
        \varrho_0 c\left(\frac{T_c U}{L}
        \frac{\partial \bar T}{\partial \bar t} +
        \frac{UT_c}{L}\bar\boldsymbol{u}\cdot\bar\nabla \bar T\right)
        &= \frac{\kappa T_c}{L^2}
        \bar \nabla^2 \bar T {\thinspace .}
        

Making each term in each equation dimensionless reduces the system to

.. _Eq:scale:fluid:forced_convection:eq:momentum_TB0:

.. math::

    \tag{207}
    \frac{\partial \bar\boldsymbol{u}}{\partial \bar t} +
        \bar \boldsymbol{u}\cdot\bar \nabla\bar\boldsymbol{u}
        = -\bar\nabla \bar p + \hbox{Re}^{-1}\bar \nabla^2\bar \boldsymbol{u},
        
        

.. _Eq:scale:fluid:forced_convection:eq:cont_TB0:

.. math::

    \tag{208}
    \bar\nabla\cdot\bar\boldsymbol{u}  = 0,
        
        

.. _Eq:scale:fluid:forced_convection:eq:energy_TB0:

.. math::

    \tag{209}
    \frac{\partial \bar T}{\partial \bar t} +
        \bar\boldsymbol{u}\cdot\bar\nabla \bar T
        = \hbox{Pe}^{-1}
        \bar \nabla^2 \bar T{\thinspace .}
        
        

The two dimensionless numbers in this system are given by

.. math::
        
        \hbox{Pe} = \frac{\varrho_0 c UL}{\kappa },\quad
        \hbox{Re} = \frac{UL}{\nu}\quad (\nu = \frac{\mu}{\varrho_0}){\thinspace .}
        

The Peclet number is here defined as the ratio of the
convection term for heat :math:`\varrho_0 c U\Delta T/L` and the
heat conduction term :math:`\kappa U/L^2`. The fraction
:math:`\kappa/(\varrho_0 c)` is known as the thermal diffusivity,
and if this quantity is given a symbol :math:`{\alpha}`, we realize the
relation to the Peclet number defined in the section :ref:`scale:convdiff`.

.. _scale:fluid:forced_convection:

Free convection
---------------

.. index:: free convection

Governing equations
~~~~~~~~~~~~~~~~~~~

The mathematical model for free thermal convection
consists of the Navier-Stokes equations
coupled to an energy equation governing the temperature:

.. _Eq:scale:fluid:free_convection:eq:momentum_T:

.. math::

    \tag{210}
    \varrho\left(\frac{\partial \boldsymbol{u}}{\partial t} + \boldsymbol{u}\cdot\nabla\boldsymbol{u}\right)
        = -\nabla p + \mu\nabla^2\boldsymbol{u} - \varrho g\boldsymbol{k},
        
        

.. _Eq:scale:fluid:free_convection:eq:cont_T:

.. math::

    \tag{211}
    \nabla\cdot\boldsymbol{u}  = 0,
        
        

.. _Eq:scale:fluid:free_convection:eq:energy_T:

.. math::

    \tag{212}
    \varrho c\left(\frac{\partial T}{\partial t} + \boldsymbol{u}\cdot\nabla T\right)
        = \kappa\nabla^2 T + 2\mu\varepsilon_{ij}\varepsilon_{ij}{\thinspace .}
        
        

.. _Eq:_auto65:

.. math::

    \tag{213}
    The symbol :math:`T` is the temperature, :math:`c` is a heat capacity, :math:`\kappa`
is the heat conduction coefficient for the fluid. In free convection,
the gravity term :math:`-\varrho(T) g\boldsymbol{k}` is essential since the flow is driven
by temperature differences and the fact that hot fluid rises while
cold fluid falls.

For slightly compressible gas flow a term :math:`-p\nabla\cdot\boldsymbol{u}` may be
needed in :ref:`(212) <Eq:scale:fluid:free_convection:eq:energy_T>` and also
a modified :ref:`(211) <Eq:scale:fluid:free_convection:eq:cont_T>`.

Heating by viscous effects
~~~~~~~~~~~~~~~~~~~~~~~~~~

We have also included heating of the fluid due to the work of viscous forces,
represented by the term :math:`2\mu\varepsilon_{ij}\varepsilon_{ij}`, where
:math:`\varepsilon_{ij}` is the strain-rate tensor in the flow, defined by

.. math::
         \varepsilon_{ij} = \frac{1}{2}\left(\frac{\partial u_i}{\partial x_j}
        + \frac{\partial u_j}{\partial x_i}\right) = \frac{1}{2}(\nabla\boldsymbol{u} + (\nabla\boldsymbol{u})^T),

where :math:`u_i` is the velocity in direction of :math:`x_i` (:math:`i=1,2,3` measures the
space directions). The term :math:`2\mu\varepsilon_{ij}\varepsilon_{ij}`
is written with Einstein's summation convention in mind such that
there is an implicit sum over :math:`i` and :math:`j`.
This term is actually much more relevant
for forced convection, but was left out in the section :ref:`scale:fluid:forced_convection` for mathematical simplicity.
Heating by the work of viscous forces is often a very
small effect and can be neglected, although it plays a major role in
forging and extrusion of metals where the viscosity is very large,
and those processes requires large external forces to drive the flow.
The reason to include the work by viscous forces under the heading of
free convection is more that we want to scale a more complete, general
mathematical model for mixed force and free convection, and arrive
at dimensionless numbers that can tell with this extra term is
important and not.

Relation between density and temperature
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The equations :ref:`(210) <Eq:scale:fluid:free_convection:eq:momentum_T>` and
:ref:`(211) <Eq:scale:fluid:free_convection:eq:cont_T>` has already been made dimensionless
in the previous section. The major difference is now that :math:`\varrho`
is no longer a constant, but a function of :math:`T`.
The relationship between :math:`\varrho` and :math:`T` is often taken as
linear,

.. math::
         \varrho = \varrho_0 -\varrho_0 \beta (T-T_0),

where

.. math::
         \beta = -\frac{1}{\varrho}\left(\frac{\partial\varrho}{\partial t}
        \right)_p,

is known as the thermal expansion coefficient of the fluid,
and :math:`\varrho_0` is a reference density when the temperature is at :math:`T_0`.

Comment on the form of the equation of continuity
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

It might look strange that the equation of continuity (from the mass
conservation principle) is :math:`\nabla\cdot\boldsymbol{u} =0`
when there are density variations in the flow. The rationale for using
this version of the continuity equation is the assumption that
the density of each fluid particle remains constant. Consequently,
from the general equation of continuity,

.. math::
         \frac{\partial\varrho}{\partial t} + \nabla\cdot (\varrho \boldsymbol{u}) =
        \frac{D\varrho}{dt} + \varrho \nabla\cdot\boldsymbol{u} = 0,

it follows that if :math:`\varrho` is constant for a particle,
the material derivative :math:`D\varrho/dt = \varrho_{t} + \boldsymbol{v}\cdot\nabla\varrho = 0`,
and the equation reduces to :math:`\nabla\cdot\boldsymbol{u} = 0`.

The Boussinesq approximation
~~~~~~~~~~~~~~~~~~~~~~~~~~~~

A very common approximation, called the *Boussinesq approximation*, is
to neglect the density variations in all terms except the gravity term.
This is a good approximation unless the change is :math:`\varrho` is large.
With the linear :math:`\varrho(T)` formula and the Boussinesq approximation,
:ref:`(210) <Eq:scale:fluid:free_convection:eq:momentum_T>`-:ref:`(212) <Eq:scale:fluid:free_convection:eq:energy_T>`
take the form

.. _Eq:scale:fluid:free_convection:eq:momentum_TB:

.. math::

    \tag{214}
    \varrho_0\left(\frac{\partial \boldsymbol{u}}{\partial t} + \boldsymbol{u}\cdot\nabla\boldsymbol{u}\right)
        = -\nabla p + \mu\nabla^2\boldsymbol{u} - (\varrho_0 - \varrho_0\beta(T-T_0))g\boldsymbol{k},
        
        

.. _Eq:scale:fluid:free_convection:eq:cont_TB:

.. math::

    \tag{215}
    \nabla\cdot\boldsymbol{u}  = 0,
        
        

.. _Eq:scale:fluid:free_convection:eq:energy_TB:

.. math::

    \tag{216}
    \varrho_0 c\left(\frac{\partial T}{\partial t} + \boldsymbol{u}\cdot\nabla T\right)
        = \kappa\nabla^2 T + 2\mu\varepsilon_{ij}\varepsilon_{ij}{\thinspace .}
        
        

.. _Eq:_auto66:

.. math::

    \tag{217}
    A good justification of the Boussinesq approximation is provided
by Tritton [Ref09]_ (Ch. 13).

Scaling          (9)
~~~~~~~~~~~~~~~~~~~~

Dimensionless variables are introduced as

.. math::
         \bar x = \frac{x}{L},\ \ t_c = \frac{L}{U},\ 
        \bar\boldsymbol{u} = \frac{\boldsymbol{u}}{U},\ \bar p = \frac{p}{\varrho U^2},\ 
        \bar T = \frac{T-T_0}{\Delta T}{\thinspace .}

The dimensionless :math:`y` and :math:`z` coordinates also make use of :math:`L` as scale.
As in forced convection, we assume the characteristic temperature
level :math:`T_0` and the scale :math:`\Delta T` are given by thermal boundary and/or
initial conditions.
Contrary to the sections :ref:`sec:scale:ns` and :ref:`scale:fluid:forced_convection`,
:math:`U` is now not given by the problem description, but implied by
:math:`\Delta T`.

Replacing quantities with dimensions by their dimensionless counterparts
results in

.. math::
        
        \varrho_0\frac{U^2}{L}\frac{\partial \bar\boldsymbol{u}}{\partial \bar t} +
        \varrho_0\frac{U^2}{L}\bar \boldsymbol{u}\cdot\bar \nabla\bar\boldsymbol{u}
        &= -\frac{p_c}{L}\bar\nabla \bar p + \frac{\mu U}{L^2}
        \bar \nabla^2\bar \boldsymbol{u} - \varrho_0g\boldsymbol{k} + \varrho_0\beta T_c\bar T g\boldsymbol{k},
        \\ 
        \frac{U}{L}\bar\nabla\cdot\bar\boldsymbol{u} & = 0,
        \\ 
        \varrho_0 c\left(\frac{T_c U}{L}
        \frac{\partial \bar T}{\partial \bar t} +
        \frac{UT_c}{L}\bar\boldsymbol{u}\cdot\bar\nabla \bar T\right)
        &= \frac{\kappa T_c}{L^2}
        \bar \nabla^2 \bar T + 2\frac{\mu U}{L}
        \bar\varepsilon_{ij}\bar\varepsilon_{ij}{\thinspace .}
        

These equations reduce to

.. _Eq:scale:fluid:free_convection:eq:momentum_TB0:

.. math::

    \tag{218}
    \frac{\partial \bar\boldsymbol{u}}{\partial \bar t} +
        \bar \boldsymbol{u}\cdot\bar \nabla\bar\boldsymbol{u}
        = -\bar\nabla \bar p + \hbox{Re}^{-1}\bar \nabla^2\bar \boldsymbol{u}
        - \hbox{Fr}^{-2}\boldsymbol{k}  + \gamma \bar T\boldsymbol{k},
        
        

.. _Eq:scale:fluid:free_convection:eq:cont_TB0:

.. math::

    \tag{219}
    \bar\nabla\cdot\bar\boldsymbol{u}  = 0,
        
        

.. _Eq:scale:fluid:free_convection:eq:energy_TB0:

.. math::

    \tag{220}
    \frac{\partial \bar T}{\partial \bar t} +
        \bar\boldsymbol{u}\cdot\bar\nabla \bar T
        = \hbox{Pe}^{-1}\bar \nabla^2 \bar T + 2\delta
        \bar\varepsilon_{ij}\bar\varepsilon_{ij}{\thinspace .}
        
        

The dimensionless numbers, in addition to Re and Fr, are

.. math::
        
        \gamma = \frac{g\beta L\Delta T }{U^2},\quad
        \hbox{Pe}^{-1} = \frac{\kappa }{\varrho_0 c UL},\quad
        \delta = \frac{\mu U}{L\varrho_0 c \Delta T}{\thinspace .}
        

The Peclet number is here defined as the ratio of the
convection term for heat :math:`\varrho_0 c U\Delta T/L` and the
heat conduction term :math:`\kappa U/L^2`.
The :math:`\gamma` number measures the ratio of thermal buoyancy and
the convection term:

.. math::
         \gamma = \frac{\varrho_0 g\beta \Delta T }{\varrho_0 U^2/L}
        = \frac{g\beta L\Delta T }{U^2}{\thinspace .}

The Pe parameter is the fraction of the convection term
and the thermal diffusion term:

.. math::
         \frac{|\varrho_0\boldsymbol{u}\cdot\nabla T|}{|\kappa\nabla^2 T|}\sim
        \frac{\varrho_0 c U \Delta T L^{-1}}{\kappa L^{-2}\Delta T}
        = \frac{\varrho c UL}{\kappa } = \hbox{Pe}{\thinspace .}

The :math:`\delta` parameter is the ratio of the viscous dissipation term
and the convection term:

.. math::
         \frac{|\mu\nabla^2\boldsymbol{u}|}{|\varrho_0c\boldsymbol{u}\cdot\nabla T|}\sim
        \frac{\mu U^2/L^2}{\varrho_0 c U \Delta T/L} =
        \frac{\mu U}{L\varrho_0 c \Delta T} = \delta{\thinspace .}
        

The Grashof, Prandtl, and Eckert numbers
----------------------------------------

.. index:: Grashof number

.. index:: Reynolds number

The problem with the above dimensionless numbers is that they involve
:math:`U`, but :math:`U` is implied by :math:`\Delta T`. Assuming that the convection
term is much bigger than the viscous diffusion term, the momentum
equation features a balance between the buoyancy term and the convection
term:

.. math::
         |\varrho_0 \boldsymbol{u}\cdot\nabla\boldsymbol{u}| \sim \varrho_0 g \beta\Delta T{\thinspace .}

Translating this similarity to scales,

.. math::
         \varrho_0 U^2/L \sim \varrho_0 g \beta\Delta T,

gives an :math:`U` of in terms of :math:`\Delta T` :

.. math::
         U = \sqrt{\beta L \Delta T}{\thinspace .}

The Reynolds number with this :math:`U` now becomes

.. math::
         \hbox{Re}_T = \frac{UL}{\nu} = \frac{\sqrt{g\beta L^3 \Delta T}}{\nu^2}
        = \hbox{Gr}^{1/2},

where Gr is the Grashof number in free thermal convection:

.. math::
         \hbox{Ga} = \hbox{Re}_T^2 =  \frac{g\beta L^3 \Delta T}{\nu^2}{\thinspace .}

The Grashof number replaces the Reynolds number in the scaled equations
of free thermal convection. We shall soon look at its interpretations,
which are not as straightforward as for the Reynolds and Peclet numbers.

The above
choice of :math:`U` in terms of :math:`\Delta T` results in :math:`\gamma` equal to unity:

.. math::
         \gamma = \frac{g\beta L\Delta T }{U^2} =
        \frac{g\beta L\Delta T }{g\beta L \Delta T} = 1{\thinspace .}

.. index:: Peclet number

The Peclet number can also be rewritten as

.. math::
         \hbox{Pe}= \frac{\varrho c UL}{\kappa } = \frac{\mu c}{\kappa}
        \frac{\varrho UL}{\mu}
        = \hbox{Pr}\hbox{Re}^{-1} = \hbox{Pr}\hbox{Re}_T^{-1},

where Pr is the Prandtl number, defined as

.. math::
         \hbox{Pr} = \frac{\mu c}{\kappa}{\thinspace .}

The Prandtl number is the ratio of the momentum diffusivity (kinematic
viscosity) and the thermal diffusivity. Actually, more detailed
analysis shows that Pr reflects the ratio of the thickness of the
thermal and velocity boundary layers: when :math:`\hbox{Pr}=1`, these layers
coincide, while :math:`\hbox{Pr}\ll 1` implies that the thermal layer is
much thicker than the velocity boundary layer, and vice versa for
:math:`\hbox{Pr}\gg 1`.

.. index:: Eckert number

The :math:`\delta` parameter is in free convection replaced by a combination
of the Eckert number (Ec) and the Reynolds number. We have that

.. math::
         \hbox{Ec} = \frac{U^2}{c\Delta T} = \delta\hbox{Re}_T,

and consequently

.. math::
         \delta = \hbox{Ec}\hbox{Re}_T^{-1} = \hbox{Ec}\hbox{Gr}^{-1/2}{\thinspace .}

Writing

.. math::
         \hbox{Ec} = \frac{\varrho_0U^2}{\varrho_0c\Delta T},

shows that the Eckert number can be interpreted as the ratio of
the kinetic energy of the flow and the thermal energy.

We use Ga instead of :math:`\hbox{Re}_T` in the momentum equations and also
instead of Pe in the energy equation (recall that :math:`\hbox{Pe} =
\hbox{Pr}\hbox{Re} =
\hbox{Pr}\hbox{Re}_T=\hbox{Pr}\hbox{Gr}^{-1/2}`). The resulting scaled
system becomes

.. _Eq:scale:fluid:free_convection:eq:momentum_TB1:

.. math::

    \tag{221}
    \frac{\partial \bar\boldsymbol{u}}{\partial \bar t} +
        \bar \boldsymbol{u}\cdot\bar \nabla\bar\boldsymbol{u}
        = -\bar\nabla \bar p + \hbox{Gr}^{-1/2}\bar \nabla^2\bar \boldsymbol{u}
        - \hbox{Fr}^{-2}\boldsymbol{k}  + \bar T \boldsymbol{k},
        
        

.. _Eq:scale:fluid:free_convection:eq:cont_TB1:

.. math::

    \tag{222}
    \bar\nabla\cdot\bar\boldsymbol{u}  = 0,
        
        

.. _Eq:scale:fluid:free_convection:eq:energy_TB1:

.. math::

    \tag{223}
    \hbox{Gr}^{1/2}\left(\frac{\partial \bar T}{\partial \bar t} +
        \bar\boldsymbol{u}\cdot\bar\nabla \bar T\right)
        = \hbox{Pr}^{-1}
        \bar \nabla^2 \bar T + 2\hbox{Ec}\hbox{Gr}^{-1/2}
        \bar\varepsilon_{ij}\bar\varepsilon_{ij}{\thinspace .}
        
        

The Grashof number plays the same
role as the Reynolds number in the momentum equation in free
convection. In particular,
it turns out that Gr governs the transition between laminar and
turbulent flow.  For example, the transition to turbulence occurs in
the range :math:`10^8 < \hbox{Gr} < 10^9` for free convection from vertical
flat plates.  Gr is normally interpreted as a dimensionless number
expressing the ratio of buoyancy forces and viscous forces.

Interpretations of the Grashof number
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Recall that the scaling leading to the Grashof number is based on an
estimate of :math:`U` from a balance of the convective and the buoyancy
terms. When the viscous term dominates over convection, we need a
different estimate of :math:`U`, since in this case, the viscous force
balances the buoyancy force:

.. math::
         \mu\nabla^2\boldsymbol{u} \sim \varrho_0g\beta\Delta T\quad
        \Rightarrow\quad \mu U/L^2 \sim \varrho_0g\beta\Delta T,

This similarity suggests the scale

.. math::
         U = \frac{g\beta L^2 \Delta T}{\nu}{\thinspace .}

Now,

.. math::
         \frac{|\varrho_0\boldsymbol{u}\cdot\nabla\boldsymbol{u}|}{|\mu\nabla^2\boldsymbol{u}|} \sim \frac{UL}{\nu}
        = \frac{g\beta L^3 \Delta T}{\nu} = \hbox{Gr}{\thinspace .}

The result means that :math:`\hbox{Gr}^{1/2}` measures the ratio of convection and
viscous forces when convection dominates, but Gr measures this ratio when
viscous forces dominate.

The product of Gr and Pr is the Rayleigh number,

.. math::
        
        \hbox{Ra} = \frac{g\beta L^3\Delta T\varrho_0 c}{\nu\kappa},
        

since

.. math::
        
        \hbox{Gr} \hbox{Pr} = \hbox{Re}_T^2\hbox{Pr} =
        \frac{g\beta L^3 \Delta T}{\nu^2}\frac{\mu c}{\kappa} =
        \frac{g\beta L^3 \Delta T\varrho_0 c}{\nu\kappa} =
        \hbox{Ra}{\thinspace .}
        

The Rayleigh number is the preferred dimensionless number when studying
free convection in horizontal layers [Ref10]_ [Ref09]_. Otherwise,
Gr and Pr are dominate.

Heat transfer at boundaries and the Nusselt number
--------------------------------------------------

.. index:: Nusselt number

A common boundary condition, modeling heat transfer to/from the
surroundings is

.. _Eq:scale:fluid:free_convection:fluxcond:

.. math::

    \tag{224}
    -\kappa\frac{\partial T}{\partial n} = h_T(T - T_s),
        
        

where :math:`\partial/\partial n` means the derivative in the normal direction
(:math:`\boldsymbol{n}\cdot\nabla`), :math:`h_T` is an experimentally determined
heat transfer coefficient, and :math:`T_s` is the temperature of
the surroundings. Scaling :ref:`(224) <Eq:scale:fluid:free_convection:fluxcond>`
leads to

.. math::
         -\frac{\kappa\Delta t}{L}\frac{\partial \bar T}{\partial \bar n} = h_T(\Delta T \bar T + T_0 - T_s),

and further to

.. math::
         \frac{\partial \bar T}{\partial \bar n} =
        \frac{h_TL}{\kappa}(\bar T + \frac{T_s - T_0}{\Delta T})
        = \hbox{Nu}(\bar T - \bar T_s),
        

where the Nusselt number is defined by

.. math::
         \hbox{Nu} = \frac{h_TL}{\kappa},

and :math:`\bar T_s` is simply the dimensionless surrounding temperature,

.. math::
         \bar T_s = \frac{T_s - T_0}{\Delta T}{\thinspace .}

Heat transfer is a huge engineering
field with lots of experimental investigations
that are summarized by curves relating various dimensionless numbers
such as Gr, Pr, and Nu.

.. _scale:bidomain:

The bidomain model in electrophysiology
=======================================

The mechanical functioning of the heart is crucially dependent on
correct electric signal propagation through the heart tissue.
A widely used mathematical
model for the electric signal propagation is the bidomain equations:

.. _Eq:scale:bidomain:eqv:

.. math::

    \tag{225}
    \chi C_m\frac{\partial v}{\partial t} =
        \nabla\cdot( M_i\nabla v) + \nabla\cdot (M_i\nabla u_e) - \chi I_{\rm{ion}}
        - \chi I_{\rm{app}},
        
        

.. _Eq:scale:bidomain:equ_e:

.. math::

    \tag{226}
    0 = \nabla\cdot( M_i\nabla v) + \nabla\cdot ((M_i + M_e)\nabla u_e){\thinspace .}
        
        

These PDEs are posed in a spatial domain :math:`H` for :math:`t\in (0, T]`. The boundary
conditions are of Neumann type, and we drop these from the discussion.
The initial condition is typically :math:`u_e=v=0`.

The symbols in these PDEs have the following meaning:
:math:`u_e` is the extracellular electric potential,
:math:`v` is the transmembrane potential (difference between the extracellular
and intracellular potential),
:math:`C_m` is the capacitance of the cell membrane,
:math:`\chi` is a membrane area to cell volume ratio,
:math:`M_i` is a electric conductivity tensor for the intracellular space,
:math:`M_e` is a electric conductivity tensor for the extracellular space,
:math:`I_{\rm{ion}}` is the ionic current across the cell membrane, and
:math:`I_{\rm{app}}` is an externally applied current.

The PDE system is driven by :math:`I_{\rm{ion}} + I_{\rm{app}}`, and models
for these source terms consist of a system of ODEs at each point
in the domain. The simplest relevant ODE system is the FitzHugh-Nagumo
model:

.. _Eq:scale:bidomain:eqFHN_v:

.. math::

    \tag{227}
    C_m\frac{dv}{dt}  = - I_{\rm{ion}} - I_{\rm{app}},
        
        

.. _Eq:scale:bidomain:eqFHN_Iion:

.. math::

    \tag{228}
    I_{\rm{ion}} = A(v-v_r)(v - v_m)(v - v_p) + Bw,
        
        

.. _Eq:scale:bidomain:eqFHN_w:

.. math::

    \tag{229}
    \frac{dw}{dt} = -c_1w + c_2v + c_3,
        
        

where :math:`A`, :math:`v_m`, :math:`v_r`, :math:`v_p`,
:math:`B`, :math:`c_1`, :math:`c_2`, and :math:`c_3` are specified constants.
[**hpl 22**: Keyner and Sneyd have a constant in the equation for :math:`w`, in both the unscaled and scaled versions, while The Bible has not.]
More complicated ODE systems for the cell dynamics may have up to a
hundred unknowns
and a correspondingly large collection of parameters.

Dimensionless independent variables are introduced by

.. math::
         \bar x = \frac{x}{L},\quad
        \bar y = \frac{y}{L},\quad \bar z = \frac{z}{L},\quad
        \bar t = \frac{t}{t_c},

where :math:`L` is the characteristic length scale, and :math:`t_c` is the
characteristic time scale. Dimensionless dependent variables are
expressed as

.. math::
         \bar v = \frac{v-v_r}{v_p-v_r},\quad \bar u = \frac{u_e}{u_c}, \quad \bar w =
        \frac{w}{w_c}{\thinspace .}

Here, :math:`v_r` is the resting potential, and :math:`v_p` is the peak potential.
The scaling of :math:`v` ensures :math:`\bar v\in [0,1]`. We introduce the symbol
:math:`\Delta v = v_p-v_r` to save space in the formulas: :math:`\bar v = (v-v_r)/\Delta v`.
The scale for :math:`u_e` is :math:`u_c`, and :math:`w_c` is a scale for :math:`w`, both to be
determined either from simplicity of the equations or from available analysis of
their magnitudes.

The variable tensor coefficients :math:`M_i` and :math:`M_e` depend on the spatial
coordinates and are also scaled:

.. math::
         \bar M_i = \frac{M_i}{M_c},\quad \bar M_e = \frac{M_e}{M_c}{\thinspace .}

For simplicity, we have chosen a common scale :math:`M_c`, but the two tensors
may employ difference scales. One typically chooses :math:`M_c` as a norm of
:math:`M_i + M_e`, e.g., the maximum value.

Inserting the dimensionless variables in the equations, the system
of governing equations becomes

.. math::
        
        \frac{\Delta v}{t_c}\chi C_m\frac{\partial \bar v}{\partial \bar t} &=
        \frac{M_c\Delta v }{L^2}\nabla\cdot( \bar M_i\bar\nabla\bar v) +
        \frac{M_c u_c}{L^2}\nabla\cdot (\bar M_i\bar \nabla \bar u) -\\ 
        &\quad
        \chi A
        \Delta v \bar v
        (v_r  - v_m + \Delta v \bar v)
        (v_r - v_p + \Delta v \bar v)-\\ 
        &\quad Bw_c\bar w
        - \chi I_{\rm{app}},
        \\ 
        0 &= \frac{M_c\Delta v }{L^2}\bar \nabla\cdot( \bar M_i\bar \nabla \bar v) + \frac{M_cu_c}{L^2}\nabla\cdot ((\bar M_i + \bar M_e)\bar \nabla \bar u),\\ 
        \frac{\Delta v}{t_c}C_m\frac{d\bar v}{d\bar t} & = -
        A
        \Delta v \bar v
        (v_r  - v_m + \Delta v \bar v)
        (v_r - v_p + \Delta v \bar v)-\\ 
        &\quad Bw_c\bar w - I_{\rm{app}},
        \\ 
        \frac{w_c}{t_c}\frac{d\bar w}{d\bar t} &= -c_1w_c\bar w +
        c_2(v_r + \Delta v \bar v) + c_3{\thinspace .}
        

Multiplying the equations by appropriate factors leads to equations with
dimensionless terms only:

.. math::
        
        \frac{\partial \bar v}{\partial \bar t} &=
        \frac{t_cM_c}{\chi C_mL^2}\nabla\cdot( \bar M_i\bar\nabla\bar v) +
        \frac{t_cM_c u_c}{\Delta v \chi C_mL^2}\nabla\cdot (\bar M_i\bar \nabla \bar u) -\\ 
        &\quad
        \frac{t_cA}{C_m\Delta v }
        \Delta v \bar v
        (v_r  - v_m + \Delta v \bar v)
        \Delta v(\bar v - 1)-\\ 
        &\quad \frac{t_cBw_c}{\chi C_m\Delta v }\bar w
        - \frac{t_c I_{\rm{app}}}{C_m\Delta v },
        \\ 
        0 &= \bar \nabla\cdot( \bar M_i\bar \nabla \bar v) + \frac{u_c}{\Delta v}\nabla\cdot ((\bar M_i + \bar M_e)\bar \nabla \bar u),\\ 
        \frac{d\bar v}{d\bar t} & = -
        \frac{t_c A}{C_m\Delta v }
        \Delta v \bar v
        (v_r  - v_m + \Delta v \bar v)
        \Delta v(\bar v - 1)-\\ 
        &\quad \frac{t_c Bw_c}{C_m\Delta v }\bar w
        - \frac{t_c}{C_m\Delta v }I_{\rm{app}},
        \\ 
        \frac{d\bar w}{d\bar t} &= -t_cc_1\bar w +
        \frac{t_cc_2}{w_c}(v_r + \Delta v \bar v) + \frac{t_cc_3}{w_c}{\thinspace .}
        

The time scale is not so obvious to choose.
The PDEs are of diffusion nature, and the relevant time scale is related
to the time it takes to diffuse the signal. On the other hand, the ODE
system, in general, may feature many different time scales. Which time
scale to choose for :math:`t_c` depends on whether one is interested in
fast time scales for some components in the ODE system or in the
(anticipated) slower diffusion scale of the PDEs. For now we choose
the time scale based on diffusion. From previous examples in
the section :ref:`sec:scale:diffu:homo1D`, we therefore
set the coefficient in front of the diffusion term to unity.

A natural length scale could be the size of the domain, in this case the
diameter of the heart, but we could also base the length and time scales on
equal balance of the time-derivative term, the diffusion terms, and the
reaction term in the PDE. Such a balance will be used below.

The reaction term can be rewritten as

.. math::
         \frac{t_cA}{C_m\Delta v }
        \Delta v^3 \bar v
        (J_1 + \bar v)
        (\bar v - 1),\quad J_1 = \frac{v_r-v_m}{\Delta v}{\thinspace .}

We require the coefficients in front of the first diffusion term and the
reaction term to equal unity:

.. math::
         \frac{t_cM_c}{\chi C_mL^2} = 1,\quad \frac{t_cA}{C_m}\Delta v^2 =1{\thinspace .},

which determines the time and length scales:

.. math::
         t_c = \frac{C_m}{A\Delta v^2},\quad L = \sqrt{\frac{M_c}{A\Delta v^2\chi}}{\thinspace .}

A natural dimensionless variable then arises from the second diffusion
term:

.. math::
         \alpha = \frac{u_c}{\Delta v}{\thinspace .}

The choice :math:`u_c=\Delta v` will of course remove the need for this dimensionless
variable, but we include the freedom to have :math:`u_c` as
some specified characteristic size of :math:`u_e`.

Since :math:`w` is just a help variable without any physiological interpretation,
we can choose its scale :math:`w_c` freely to simplify the expressions.
For example, we can fit :math:`w_c` to make the coefficient in front of
the :math:`\bar w` term equal to unity:

.. math::
         w_c = \frac{A}{B}\chi\Delta v^3{\thinspace .}

The final dimensionless system becomes

.. _Eq:_auto67:

.. math::

    \tag{230}
    \frac{\partial \bar v}{\partial \bar t} =
        \nabla\cdot( \bar M_i\bar\nabla\bar v) +
        \alpha\nabla\cdot (\bar M_i\bar \nabla \bar u) -
        \bar v
        (J_1 +  \bar v)
        (\bar v - 1) - \bar w - \beta,
        
        

.. _Eq:_auto68:

.. math::

    \tag{231}
    0 = \bar \nabla\cdot( \bar M_i\bar \nabla \bar v) +
        \alpha\nabla\cdot ((\bar M_i + \bar M_e)\bar \nabla \bar u),
        
        

.. _Eq:_auto69:

.. math::

    \tag{232}
    \frac{d\bar v}{d\bar t}  = -
        \bar v
        (J_1 +  \bar v)
        (\bar v -1)- \bar w - \beta,
        
        

.. _Eq:_auto70:

.. math::

    \tag{233}
    \frac{d\bar w}{d\bar t} = -K_1\bar w +
        K_2\bar v + K_3{\thinspace .}
        
        

There are seven dimensionless variables in the above equations:

[**hpl 23**: Recalculate :math:`K_1`, :math:`K_2`, :math:`K_3` with right :math:`t_c`.]

.. _Eq:_auto71:

.. math::

    \tag{234}
    \alpha = \frac{u_c}{\Delta v},
        
        

.. _Eq:_auto72:

.. math::

    \tag{235}
    \beta = \frac{I_{\rm{app}}}{\Delta v^3},
        
        

.. _Eq:_auto73:

.. math::

    \tag{236}
    J_1 = \frac{v_r-v_m}{\Delta v},
        
        

.. _Eq:_auto74:

.. math::

    \tag{237}
    J_2 = \frac{v_r}{\Delta v},
        
        

.. _Eq:_auto75:

.. math::

    \tag{238}
    K_1 = \frac{\chi C_m L^2c_1}{M_c},
        
        

.. _Eq:_auto76:

.. math::

    \tag{239}
    K_2  = \frac{\chi C_m L^2\Delta v^2c_2}{M_c w_c},
        
        

.. _Eq:_auto77:

.. math::

    \tag{240}
    K_3 = \frac{\chi C_mL^2(c_3 + c_2 v_r\Delta v)}{M_cw_c}{\thinspace .}
        
        

Some of these dimensionless numbers have straightforward
interpretations: :math:`\alpha` is the ratio of the span in the two electric
potentials; :math:`\beta` is ratio of the source term with :math:`I_{\rm{app}}` and the
time-derivative term of :math:`v`, or the source term and the diffusion term
in :math:`v`.  The rest have fixed values: :math:`J_1` and :math:`J_2` have
well-established values from measurements, while :math:`\beta`,
:math:`K_1`, :math:`K_2`, and :math:`K_3` contain empirically fitted constants with
known values, combined with known scales and other known physical
parameters.

Two-phase porous media flow
===========================

We consider the flow of two incompressible, immiscible fluids in
a porous medium with porosity :math:`\phi (\boldsymbol{x})`. The two fluids are referred to
as the `wetting <https://en.wikipedia.org/wiki/Wetting>`__ and
non-wetting fluid. In an oil-water mixture, water is usually the
wetting fluid. The fraction of the pore volume occupied by the
wetting fluid is denoted by :math:`S(\boldsymbol{x},t)`. The non-wetting fluid then occupies
:math:`1-S` of the pore volume (or :math:`(1-S)\phi` of the total volume).
The variable :math:`P(\boldsymbol{x},t)` represents the pressure in the non-wetting fluid.
It is related to the pressure :math:`P_n` in the non-wetting fluid through
the capillary pressure :math:`p_c=P_n-P`, which is an empirically determined
function of :math:`S`.

From mass conservation of the two fluids and from Darcy's law for
each fluid, one can derive the following system of PDEs and
algebraic relations that govern the two primary unknowns :math:`S` and :math:`P`:

.. _Eq:scale:twoph:Peq:

.. math::

    \tag{241}
    \nabla\cdot\boldsymbol{v}_t = -(Q_n + Q_w),
        
        

.. _Eq:scale:twoph:v_teq:

.. math::

    \tag{242}
    \boldsymbol{v}_t = -\lambda_t\nabla P + \lambda_wp_c'(S)\nabla S + (\lambda_w\varrho_w
        + \lambda_n\varrho_n)g\boldsymbol{k},
        
        

.. math::
          
        \phi\frac{\partial S}{\partial t} + f_w'(S)\boldsymbol{v}_t\cdot\nabla S =
        \nabla\cdot(h_w(S)p_c'(S)\nabla S) + \nonumber
        

.. _Eq:scale:twoph:Seq:

.. math::

    \tag{243}
    \qquad\qquad g\frac{\partial G_w}{\partial z} + f_w(Q_n+Q_w) - Q_w,
        
        

.. _Eq:scale:twoph:Q_w:

.. math::

    \tag{244}
    Q_w = \frac{q_w}{\varrho_w},
        
        

.. _Eq:scale:twoph:Q_n:

.. math::

    \tag{245}
    Q_n = \frac{q_n}{\varrho_n},
        
        

.. _Eq:scale:twoph:lambda_w:

.. math::

    \tag{246}
    \lambda_w(S) = \frac{K}{\mu_w}k_{rw}(S),
        
        

.. _Eq:scale:twoph:lambda_n:

.. math::

    \tag{247}
    \lambda_n(S) = \frac{K}{\mu_n}k_{rn}(S),
        
        

.. _Eq:scale:twoph:lambda_t:

.. math::

    \tag{248}
    \lambda_t(S) = \lambda_w(S) + \lambda_n(S),
        
        

.. _Eq:scale:twoph:k_rw:

.. math::

    \tag{249}
    k_{rw}(S) = K_{wm}\left\lbrack\frac{S-S_{wr}}{1-S_{nr}-S_{wr}}\right\rbrack^a,
        
        

.. _Eq:scale:twoph:k_rn:

.. math::

    \tag{250}
    k_{rn}(S) = K_{nm}\left\lbrack\frac{1-S-S_{nr}}{1-S_{nr}-S_{wr}}\right\rbrack^b,
        
        

.. _Eq:scale:twoph:f_w:

.. math::

    \tag{251}
    f_w(S) = \frac{\lambda_w}{\lambda_t},
        
        

.. _Eq:scale:twoph:G_w:

.. math::

    \tag{252}
    G_w(S) = h_w(S)(\varrho_n - \varrho_w),
        
        

.. _Eq:scale:twoph:h_w:

.. math::

    \tag{253}
    h_w(S) = -\lambda_n(S)f_w(S),
        {\thinspace .}
        

The permeability of the porous medium is :math:`K`
(usually a tensor, but here taken as a
scalar for simplicity); :math:`\mu_w` and :math:`\mu_n` are the dynamic viscosities
of the wetting and non-wetting fluid, respectively;
:math:`\varrho_w` and :math:`\varrho_n` are the densities
of the wetting and non-wetting fluid, respectively;
:math:`q_w` and :math:`q_n` are the injection rates of the wetting and non-wetting
fluid through wells, respectively;
:math:`S_{wr}` is the irreducible saturation of
the wetting fluid (i.e., :math:`S\geq S_{wr}`); :math:`S_{nr}` is the corresponding
irreducible saturation of the non-wetting fluid (i.e., :math:`(1-S)\geq S_{nr}`),
:math:`K_{wn}` and :math:`K_{nr}` are the maximum values of the
relative permeabilities :math:`k_{rw}` and :math:`k_{rn}`, respectively, and
:math:`a` and :math:`b` are given (Corey) exponents in the expressions for the
relative permeabilities.

The two PDEs are of elliptic and hyperbolic/parabolic nature:
:ref:`(241) <Eq:scale:twoph:Peq>` is elliptic since it is the divergence of a
vector field, while :ref:`(243) <Eq:scale:twoph:Seq>` is parabolic (:math:`h_w\geq 0`
because :math:`p_c'(S)\geq 0` and :math:`\lambda_n` as well as :math:`f_w` are positive
since :math:`k_{rn}>0` and :math:`k_{rw}>0`). Very often, :math:`p_c'` is small so
:ref:`(243) <Eq:scale:twoph:Seq>` is of hyperbolic nature, and :math:`S` features very
steep gradients that become shocks in the limit :math:`p_c'\rightarrow 0`
and :ref:`(243) <Eq:scale:twoph:Seq>` is purely hyperbolic.
A popular solution technique is based on operator splitting:
:ref:`(241) <Eq:scale:twoph:Peq>` is solved with respect to :math:`P`, given :math:`S`, and
:ref:`(243) <Eq:scale:twoph:Seq>` is solved with respect to :math:`S`, given :math:`P`.

The saturation :math:`S` is a non-dimensional quantity, and so are :math:`\phi`,
:math:`k_{rw}`, :math:`k_{rn}`, :math:`K_{wm}`, :math:`K_{nm}`, :math:`f_w`, and :math:`f_w'`.
The quantity :math:`\boldsymbol{v}_t` is the total filtration velocity, i.e., the
sum of the velocities of the wetting and non-wetting fluid.
An associated velocity scale :math:`v_c` is convenient to define.
It is also convenient to introduce dimensionless fractions of
wetting and non-wetting fluid properties:

.. math::
        
        \varrho &\equiv \varrho_w,\\ 
        \varrho_n &= \varrho\alpha,\quad \alpha = \frac{\varrho_n}{\varrho_w},\\ 
        \mu &\equiv\mu_w,\\ 
        \mu_n &= \mu\beta,\quad \beta = \frac{\mu_n}{\mu_w},\\ 
        Q &\equiv Q_w = \frac{q_w}{\varrho},\\ 
        Q_n &= Q\frac{\gamma}{\alpha},\quad \gamma = \frac{q_n}{q_w}{\thinspace .}
        

We will benefit from making :math:`\lambda_w`, :math:`\lambda_n`, and :math:`\lambda_t`
dimensionless:

.. math::
        
        \lambda_w(S) &= \frac{K}{\mu}k_{rw}(S) = \lambda_c\bar\lambda_w,\quad
        \lambda_c=\frac{K}{\mu},\quad \bar\lambda_w = k_{rw},\\ 
        \lambda_n(S) &= \frac{K}{\mu}\beta^{-1}k_{rn}(S) = \lambda_c\beta^{-1}\bar\lambda_n,
        \quad\bar\lambda_n = k_{rn},\\ 
        \lambda_t(S) &= \lambda_w(S) + \lambda_n(S) = \lambda_c\bar\lambda_t,\quad
        \bar\lambda_t = \bar \lambda_w +
        \beta^{-1}\bar\lambda_n{\thinspace .}
        

As we see, :math:`\lambda_c` is the characteristic size of any "lambda"
quantity, and a bar indicates as always a dimensionless variable.
The above formulas imply

.. math::
         h_w(S) = -\lambda_c\beta^{-1}\bar\lambda_n(S)f_w(S),\quad
        G_w(S) = h_w(S)\varrho(\alpha - 1){\thinspace .}

Furthermore, we introduce dimensionless quantities by

.. math::
         \bar\boldsymbol{x} = \frac{\boldsymbol{x}}{L},\quad \bar\boldsymbol{v}_t = \frac{\boldsymbol{v}_t}{v_c},\quad
        \bar P = \frac{P}{P_c},\quad\bar p_c = \frac{p_c}{P_c}{\thinspace .}

Inserting the above scaled quantities in the governing PDEs results in

.. _Eq:scale:twoph:Peq:s0:

.. math::

    \tag{254}
    \bar\nabla\cdot\bar\boldsymbol{v}_t = -\frac{LQ}{v_c}(1 + \alpha^{-1}\gamma),
        
        

.. math::
          
        \bar\boldsymbol{v}_t = -\frac{P_c\lambda_c}{v_c L}\bar\lambda_t\bar\nabla\bar P +
        \frac{\lambda_c P_c}{v_c L}\bar\lambda_w \bar p_c'(S)\bar\nabla S +\nonumber
        

.. _Eq:scale:twoph:v_teq:s0:

.. math::

    \tag{255}
    \quad\quad\frac{g\lambda_c\varrho}{v_c}
        (\bar\lambda_w + \alpha\beta^{-1}\bar\lambda_n)\boldsymbol{k},
        
        

.. math::
          
        \phi\frac{\partial S}{\partial\bar t} + \frac{t_cv_c}{L}f_w'(S)\bar\boldsymbol{v}_t\cdot
        \bar\nabla S =
        \frac{t_c P_c\lambda_c}{L^2}
        \bar\nabla\cdot(-\beta^{-1}\bar\lambda_n(S)f_w(S)\bar p_c'(S)\bar\nabla S) + \nonumber
        

.. _Eq:scale:twoph:Seq:s0:

.. math::

    \tag{256}
    \quad\quad \frac{t_c g}{L}\frac{\partial G_w}{\partial\bar z} + t_c f_w Q(1+\alpha^{-1}\gamma) - t_cQ{\thinspace .}
        
        

As usual, :math:`L` is taken as the characteristic length of the spatial domain.
Since :math:`v_c` is a velocity scale, a natural time scale is the time it
takes to transport a signal with velocity :math:`v_c` through the domain:
:math:`t_c = L/v_c`. The diffusion term in the equation
:ref:`(259) <Eq:scale:twoph:Seq:s>` then gets
a dimensionless fraction

.. math::
         \frac{L P_c\lambda_c}{v_c L^2}{\thinspace .}

Forcing this fraction to be unity gives

.. math::
         v_c = \lambda_c\frac{P_c}{L}{\thinspace .}

We realize that this is indeed a natural velocity scale if the
velocity is given by the pressure term in Darcy's law. This term
is :math:`K/\mu` times the pressure gradient:

.. math::
         \frac{K}{\mu}|\nabla P| \sim \frac{K}{\mu}\frac{P_c}{L} =
        \lambda_c\frac{P_c}{L} = v_c{\thinspace .}

We have here dropped the impact of the
relative permeabilities :math:`\bar\lambda_w` or
:math:`\bar\lambda_n` since these are quantities that are less than or equal
to unity.

The other term in Darcy's law is the gravity term that goes like
:math:`\lambda_c \varrho g` (again dropping relative permeabilities).
The ratio of the gravity term and the pressure gradient term in Darcy's
law is an interesting dimensionless number:

.. math::
         \delta = \frac{\lambda_c \varrho g}{\lambda_c P_c/L} =
        \frac{L\varrho g}{P_c}{\thinspace .}

This number naturally arises when we discuss
the term

.. math::
         \frac{t_c g}{L}\frac{\partial G_w}{\partial\bar z} =
        -(\alpha -1)\beta^{-1}\delta
        (\bar\lambda_n'(S)f_w(S) + \bar\lambda_n(S)f_w'(S))
        \frac{\partial S}{\partial\bar z}
        

Introducing another dimensionless variable,

.. math::
         \epsilon = t_cQ = \frac{L^2Q}{\lambda_cP_c},

we can write :ref:`(254) <Eq:scale:twoph:Peq:s0>`-:ref:`(256) <Eq:scale:twoph:Seq:s0>` in the
final dimensionless form as

.. _Eq:scale:twoph:Peq:s:

.. math::

    \tag{257}
    \bar\nabla\cdot\bar\boldsymbol{v}_t = -\epsilon(1 + \alpha^{-1}\gamma),
        
        

.. _Eq:scale:twoph:v_teq:s:

.. math::

    \tag{258}
    \bar\boldsymbol{v}_t = -\bar\lambda_t\bar\nabla\bar P +
        \bar\lambda_w \bar p_c'(S)\bar\nabla S +
        \delta(\bar\lambda_w + \alpha\beta^{-1}\bar\lambda_n)\boldsymbol{k},
        
        

.. math::
          
        \phi\frac{\partial S}{\partial\bar t} + f_w'(S)\bar\boldsymbol{v}_t\cdot
        \bar\nabla S = -
        \bar\nabla\cdot(-\beta^{-1}\bar\lambda_n(S)f_w(S)\bar p_c'(S)\bar\nabla S) -
        \nonumber
        

.. math::
          
        \quad\quad (\alpha -1)\beta^{-1}\delta
        (\bar\lambda_n'(S)f_w(S) + \bar\lambda_n(S)f_w'(S))
        \frac{\partial S}{\partial\bar z} +\nonumber
        

.. _Eq:scale:twoph:Seq:s:

.. math::

    \tag{259}
    \quad\quad\epsilon f_w (1+\alpha^{-1}\gamma) -
        \epsilon{\thinspace .}
        
        

The eight input parameters :math:`L`, :math:`q_w`, :math:`q_n`, :math:`\mu_w`, :math:`\mu_n`,
:math:`\varrho_w`, :math:`\varrho_n`, and :math:`K` are reduced to five dimensionless
parameters :math:`\alpha`, :math:`\beta`, :math:`\gamma`, :math:`\delta`, and :math:`\epsilon`.
There are six remaining dimensionless numbers to be set: :math:`K_{wm}`,
:math:`K_{nm}`, :math:`S_{wr}`, :math:`S_{nr}`, :math:`a`, and :math:`b`.

[**hpl 24**: Boundary conditions?]

[**hpl 25**: Simplifications: skip gravity, sources, capillary pressure, simplify relative permeabilities.]

[**hpl 26**: Exercises: single-phase flow, with and without thermal effects.]

.. _scale:gasdyn:

Compressible gas dynamics
=========================

.. _scale:Euler_eqs:

The Euler equations of gas dynamics
-----------------------------------

The fundamental equations for a compressible fluid are based on balance
of mass, momentum, and energy. The PDE system, known as the Euler
equations of gas dynamics, can be written as

.. _Eq:scale:Euler_eqs:mass:

.. math::

    \tag{260}
    \frac{\partial\varrho}{\partial t} + \nabla\cdot(\varrho\boldsymbol{u}) = 0,
        
        

.. _Eq:scale:Euler_eqs:mom:

.. math::

    \tag{261}
    \frac{\partial(\varrho\boldsymbol{u})}{\partial t} + \nabla\cdot(\varrho\boldsymbol{u}\boldsymbol{u}^T) = -\nabla p + \varrho \boldsymbol{f},
        
        

.. _Eq:scale:Euler_eqs:energy:

.. math::

    \tag{262}
    \frac{\partial E}{\partial t} + \nabla\cdot(\boldsymbol{u}(E+p)) = 0,
        
        

where the total energy is given by

.. _Eq:scale:Euler_eqs:E:

.. math::

    \tag{263}
    E = \varrho e + \frac{1}{2}\varrho\boldsymbol{u}\cdot\boldsymbol{u}{\thinspace .}
        
        

In these equations, :math:`\boldsymbol{u}` is the fluid velocity, :math:`\varrho` is the density,
:math:`p` is the pressure, :math:`E` is the total energy per unit volume, composed
of the kinetic energy per unit volume, :math:`\frac{1}{2}\varrho \boldsymbol{u}\cdot\boldsymbol{u}`, and the
internal energy per unit volume, :math:`\varrho e`.

Assuming the fluid to be an ideal gas implies the following additional
relations:

.. _Eq:scale:Euler_eqs:e:

.. math::

    \tag{264}
    e = c_v T,
        
        

.. _Eq:scale:Euler_eqs:p:

.. math::

    \tag{265}
    p = \varrho RT = \frac{R}{c_v}(E-\frac{1}{2}\varrho \boldsymbol{u}\cdot\boldsymbol{u}),
        
        

where :math:`c_v` is the specific heat capacity at constant volume (for dry air
:math:`c_v = 717.5\, \hbox{J}\,\hbox{kg}^{-1}\hbox{K}^{-1}`),
:math:`R` is the specific ideal gas constant
(:math:`R=287.14 \hbox{J}\hbox{kg}^{-1}\hbox{K}^{-1}`), and :math:`T` is the temperature.

The common way to solve these equations is to propagate :math:`\varrho`,
:math:`\varrho\boldsymbol{u}`, and :math:`E` by an explicit numerical method in time for
:ref:`(260) <Eq:scale:Euler_eqs:mass>`-:ref:`(262) <Eq:scale:Euler_eqs:energy>`,
using :ref:`(265) <Eq:scale:Euler_eqs:p>` for :math:`p`.

We introduce dimensionless independent variables,

.. math::
         \bar x = \frac{x}{L},\quad \bar y = \frac{y}{L},\quad \bar z = \frac{z}{L},
        \quad \bar t = \frac{t}{t_c},

and dimensionless dependent variables,

.. math::
         \bar\boldsymbol{u} = \frac{\boldsymbol{u}}{U},\quad\bar\varrho = \frac{\varrho}{\varrho_c},
        \quad\bar p = \frac{p}{p_c},\quad \bar E= \frac{E}{E_c}{\thinspace .}

Inserting these expressions in the governing equations gives

.. math::
        
        \frac{\partial\bar\varrho}{\partial\bar t} + \frac{t_c U}{L}\bar\nabla\cdot(\bar\varrho\bar\boldsymbol{u}) &= 0,\\ 
        \frac{\partial(\bar\varrho\bar\boldsymbol{u})}{\partial\bar t} + \frac{t_cU}{L}\bar\nabla\cdot(\bar\varrho\bar\boldsymbol{u}\bar\boldsymbol{u}^T) &= -\frac{t_cp_c}{UL\varrho_c}\nabla\bar p + \frac{t_c f_c}{U}\bar\varrho \bar\boldsymbol{f},\\ 
        \frac{\partial\bar E}{\partial\bar t} + \frac{t_c U}{LE_c }\bar\nabla\cdot(\bar\boldsymbol{u}(E_c\bar E+p_c\bar p)) &= 0,\\ 
        \bar p & = \frac{R}{c_v p_c}(E_c\bar E - \frac{1}{2}\varrho_cu_c\bar\varrho\bar\boldsymbol{u}\cdot\bar\boldsymbol{u}){\thinspace .}
        

A natural choice of time scale is :math:`t_c=L/U`. A common choice of
pressure scale is :math:`p_c=\varrho_c U^2`. The energy equation simplifies if
we choose :math:`E_c=p_c=\varrho_c U^2`. With these scales we get

.. math::
        
        \frac{\partial\bar\varrho}{\partial\bar t} +
        \bar\nabla\cdot(\bar\varrho\bar\boldsymbol{u}) &= 0,\\ 
        \frac{\partial(\bar\varrho\bar\boldsymbol{u})}{\partial\bar t} +
        \bar\nabla\cdot(\bar\varrho\bar\boldsymbol{u}\bar\boldsymbol{u}^T) &=
        -\nabla\bar p + \alpha\bar\varrho \bar\boldsymbol{f},\\ 
        \frac{\partial\bar E}{\partial\bar t} +
        \bar\nabla\cdot(\bar\boldsymbol{u}(\bar E+ \bar p)) &= 0,\\ 
        \bar p & = \frac{R}{c_v}(\bar E - \frac{1}{2}\bar\varrho\bar u\cdot\bar u),
        

where :math:`\alpha` is a dimensionless number:

.. math::
         \alpha = \frac{Lf_c}{U^2}{\thinspace .}

We realize that the scaled Euler equations look like
the ones with dimension, apart from the :math:`\alpha` coefficient.

[**hpl 27**: Comment on software also for advanced models.]

.. _scale:gas:acoustic:

The acoustic approximation and the Mach number
----------------------------------------------

Heat transfer can be neglected in
`isentropic flow <https://en.wikipedia.org/wiki/Isentropic_process>`__,
and there is hence an equation of state involving only :math:`\varrho` and
:math:`p`:

.. math::
         p = F(\varrho){\thinspace .}

The energy equation is now not needed and the Euler equations simplify
to

.. _Eq:scale:gas:acoustic:rho:

.. math::

    \tag{266}
    \frac{\partial\varrho}{\partial t} + \nabla\cdot(\boldsymbol{u}\varrho) =0,
        
        

.. _Eq:scale:gas:acoustic:u:

.. math::

    \tag{267}
    \varrho\frac{\partial\boldsymbol{u}}{\partial t} + \varrho\boldsymbol{u}\cdot\nabla\boldsymbol{u} + \nabla p =0{\thinspace .}
        
        

Elimination of the pressure
~~~~~~~~~~~~~~~~~~~~~~~~~~~

Typically,

.. math::
         F(\varrho) = p_0\left(\frac{\varrho}{\varrho_0}\right)^\gamma,

where :math:`\gamma = 5/3` for air. The first step is to eliminate :math:`p` in
favor of :math:`\varrho` so we get a system for :math:`\varrho` and :math:`\boldsymbol{u}`.
To this end,

.. math::
         \nabla p = F'(\varrho)\nabla\varrho,\quad
        F'(\varrho)= c_0^2\left(\frac{\varrho}{\varrho_0}\right)^{\gamma-1},

where

.. math::
         c_0 = \sqrt{\frac{\gamma p_0}{\varrho_0}}

is the speed of sound in the fluid in the equilibrium state.
Equation :ref:`(267) <Eq:scale:gas:acoustic:u>` with eliminated pressure :math:`p` reads

.. _Eq:scale:gas:acoustic:u2:

.. math::

    \tag{268}
    \varrho\frac{\partial\boldsymbol{u}}{\partial t} + \varrho\boldsymbol{u}\cdot\nabla\boldsymbol{u} +
        c_0^2\left(\frac{\varrho}{\varrho_0}\right)^{\gamma-1}\nabla\varrho =0{\thinspace .}
        
        

Basic scaling for small wave perturbations
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

In a model for sound waves there are small pressure, velocity, and
density perturbations from a ground state at rest where :math:`\boldsymbol{u}=0`, :math:`\varrho=\varrho_0`, and :math:`p=p_0 = F(\varrho_0)`. Let :math:`\varrho_c`, :math:`p_c=F(\varrho_c)`, and
:math:`u_c` be characteristic sizes of these perturbations.
The density, e.g., will then vary in :math:`[\varrho_0-\varrho_c,\varrho_0+\varrho_c]`.
An appropriate scaling is

.. math::
         \bar\varrho =\frac{\varrho - \varrho_0}{\varrho_c} 

such that :math:`\bar\varrho\in [-1,1]`. Consequently,

.. math::
         \varrho = \varrho_0 + \varrho_c\bar\varrho = \varrho_0(1 + \alpha\bar\varrho),\quad \alpha = \frac{\varrho_c}{\varrho_0}{\thinspace .}

Note that the dimensionless :math:`\alpha` is expected to be a very small number
since :math:`\varrho_c\ll \varrho_0`.

The velocity is scaled as

.. math::
         \bar\boldsymbol{u} = \boldsymbol{u}/U,

while space and time are scaled as usual:

.. math::
         \bar x = \frac{x}{L},\quad\bar y = \frac{y}{L},\quad\bar z = \frac{z}{L},
        \quad\bar t = \frac{t}{t_c}{\thinspace .}

Note that :math:`\varrho_0` and :math:`p_0` are known values, but the scales
:math:`\varrho_c`, :math:`p_c=F(\varrho_c)`, and :math:`U` are not known. Usually these
can be estimated from perturbations applied at the boundary.

Inserting the dimensionless variables leads to

.. math::
        
        \frac{\varrho_0}{t_c}\frac{\partial\bar\varrho}{\partial\bar t}
        + \frac{\varrho_0 U}{L}\bar\nabla\cdot((1+\alpha\bar\varrho)\bar\boldsymbol{u}) &=0,\\ 
        \frac{\varrho_0 U}{t_c}(1 + \alpha\bar\varrho)
        \frac{\partial\bar\boldsymbol{u}}{\partial\bar t} +
        \frac{\varrho_0 U^2}{L}(1 + \alpha\bar\varrho)\bar u\cdot\bar\nabla\bar\boldsymbol{u}
        + \frac{\varrho_0}{L}c_0^2\left(1 + \alpha\bar\varrho\right)^{\gamma-1}
        \bar\nabla\bar\varrho
        &=0{\thinspace .}
        

The time scale
~~~~~~~~~~~~~~

What is the appropriate time scale? It could be :math:`t_c=L/U` as in many
other flow problems. However, in the present model we expect sound waves,
so the velocity :math:`c_0` of the sound waves is the appropriate velocity scale.
The flow velocity :math:`U` is expected to be very much smaller than :math:`c_0`
(think of speaking: the sound travels very fast but one cannot feel
the corresponding very small flow perturbation in the air!).
Therefore, :math:`t_c = L/c_0` is the corresponding (short) natural time scale.
Using this time scale, we achieve

.. math::
        
        \frac{\partial\bar\varrho}{\partial\bar t}
        + \hbox{M}\bar\nabla\cdot((1+\alpha\bar\varrho)\bar\boldsymbol{u}) &=0,\\ 
        (1 + \alpha\bar\varrho)
        \frac{\partial\bar\boldsymbol{u}}{\partial\bar t} +
        \hbox{M}(1 + \alpha\bar\varrho)\bar\boldsymbol{u}\cdot\bar\nabla\bar\boldsymbol{u} +
        \hbox{M}^{-1}\left(1 + \alpha \bar\varrho\right)^{\gamma-1}\bar\nabla\bar\varrho
        &=0,
        

where the dimensionless number

.. math::
         \hbox{M} = \frac{U}{c_0},

is known as the *Mach number*.

.. index:: Mach number

Linearization
~~~~~~~~~~~~~

With the assumption of small perturbations, M and :math:`\alpha` are small numbers.
We can first approximate :math:`1+\alpha` by 1. Thereafter, we realize
that multiplying by M in the momentum equation gives

.. math::
        
        \hbox{M}\frac{\partial\bar\boldsymbol{u}}{\partial\bar t} +
        \hbox{M}^2\bar\boldsymbol{u}\cdot\bar\nabla\bar\boldsymbol{u}
        + \left(1 + \alpha \bar\varrho\right)^{\gamma-1}\bar\nabla\bar\varrho
        =0

The term :math:`\hbox{M}^2\bar\boldsymbol{u}\cdot\bar\nabla\bar\boldsymbol{u}` has size
:math:`\hbox{M}^2` and is very smaller than the first and third term,
suggesting that we omit the nonlinear term.
We arrive at the following linearized system of PDEs

.. _Eq:scale:gas:acoustic:rho:s:

.. math::

    \tag{269}
    \frac{\partial\bar\varrho}{\partial\bar t}
        + \hbox{M}\bar\nabla\cdot\bar\boldsymbol{u} =0,
        
        

.. _Eq:scale:gas:acoustic:u2:s:

.. math::

    \tag{270}
    \hbox{M}\frac{\partial\bar\boldsymbol{u}}{\partial\bar t} + \bar\nabla\bar\varrho =0,
        
        

The velocity :math:`\boldsymbol{u}` can be eliminated taking the time derivative of
:ref:`(269) <Eq:scale:gas:acoustic:rho:s>` and the divergence of
:ref:`(270) <Eq:scale:gas:acoustic:u2:s>`:

.. _Eq:_auto78:

.. math::

    \tag{271}
    \frac{\partial^2\bar\varrho}{\partial\bar t^2} +
        \bar\nabla^2\bar\varrho = 0,
        
        

which is nothing but a standard, linear wave equation. Similarly,
we can eliminate :math:`\varrho` by taking the divergence of
:ref:`(269) <Eq:scale:gas:acoustic:rho:s>` and the time derivative of
:ref:`(270) <Eq:scale:gas:acoustic:u2:s>`:

.. _Eq:_auto79:

.. math::

    \tag{272}
    \frac{\partial^2\bar\boldsymbol{u}}{\partial\bar t^2} +
        \bar\nabla^2\bar\boldsymbol{u} = 0,
        
        

which shows that each component of the velocity also propagates according
to the wave equation with unit velocity.
We also observe that there are no physical parameters in the scaled
wave equations. The M parameter can be eliminated from
:ref:`(269) <Eq:scale:gas:acoustic:rho:s>`-:ref:`(270) <Eq:scale:gas:acoustic:u2:s>`
by introducing a new unknown :math:`\bar\boldsymbol{v} = M\bar\boldsymbol{u}`.

General isentropic flow
-----------------------

Suppose we are not interested in acoustic waves in isentropic flow,
as described in the previous section, but
in a significant velocity of characteristic size :math:`U` and corresponding
significant changes in :math:`\varrho` and :math:`p`. The relevant time scale is
not that of the waves, but of the overall flow: :math:`t_c=L/U`.

The governing equations are :ref:`(266) <Eq:scale:gas:acoustic:rho>`
and :ref:`(268) <Eq:scale:gas:acoustic:u2>`. We scale :math:`\varrho`
directly by its magnitude :math:`\varrho_c`: :math:`\bar\varrho = \varrho/\varrho_c`.
Then :math:`F'(\varrho)=c_0^2\bar\varrho^{\gamma-1}`.
All other scalings remain as in the section :ref:`scale:gas:acoustic`.
The result of inserting dimensionless variables and using
:math:`t_c=L/U` is

.. _Eq:_auto80:

.. math::

    \tag{273}
    \frac{\partial\bar\varrho}{\partial\bar t}
        + \bar\nabla\cdot(\bar\varrho\bar\boldsymbol{u}) =0,
        
        

.. _Eq:_auto81:

.. math::

    \tag{274}
    \bar\varrho
        \frac{\partial\bar\boldsymbol{u}}{\partial\bar t} +
        \bar\varrho\bar\boldsymbol{u}\cdot\bar\nabla\bar\boldsymbol{u}
        + \hbox{M}^{-2}\bar\varrho^{\gamma-1}
        \bar\nabla\bar\varrho
        =0{\thinspace .}
        
        

Again, there is only one dimensionless parameter, the Mach number M.
The boundary conditions specify the characteristic velocity :math:`U` and
thereby the Mach number.

Exercises
=========

.. --- begin exercise ---

.. _sec:scale:exer:US2SI1:

Exercise 1: Perform unit conversion
-----------------------------------

Density (mass per volume: :math:`[\hbox{ML}^{-3}]`) of water is
given as 1.05 ounce per fluid ounce. Use the ``PhysicalQuantity`` object
to convert to :math:`\hbox{kg\,m}^{-3}`.

.. removed !bsol ... !esol environment (because of the command-line option --without_solutions)

Filename: ``density_conversion``.

.. --- end exercise ---

.. --- begin exercise ---

.. _sec:scale:exer:ball_y:

Problem 2: Scale a simple formula
---------------------------------

The height :math:`y` of a body thrown up in the air is given by

.. math::
         y = v_0t - \frac{1}{2}gt^2,

where :math:`t` is time, :math:`v_0` is the initial velocity of the body at :math:`t=0`,
and :math:`g` is the acceleration of gravity. Scale this formula. Use
two choices of the characteristic time: the time it takes to reach the
maximum :math:`y` value and the time it takes to return to :math:`y=0`.

.. removed !bsol ... !esol environment (because of the command-line option --without_solutions)

Filename: ``scaled_vertical_motion``.

.. --- end exercise ---

.. --- begin exercise ---

.. _sec:scale:exer:decay:cooling:osc:

Exercise 3: Perform alternative scalings
----------------------------------------

The problem in the section :ref:`scale:decay:cooling:osc` applies a
temperature scaling

.. math::
         \bar T = \frac{T-T_0}{T_m-T_0},

which is not always suitable.

**a)**
Consider the case :math:`T_0=T_m` and the fact that :math:`|T_m-T_0|` does not
represent the characteristic temperature scale since it
collapses to zero. Formulate a suitable
scaling in this case. The figure below corresponds to :math:`T_m=25` C,
:math:`T_0=24.9` C, and :math:`a=2.5` C. We clearly see that :math:`\bar T` is
not of size unity.

.. figure:: osc_cooling_wrong_scale.png
   :width: 500

.. removed !bsol ... !esol environment (because of the command-line option --without_solutions)

**b)**
Consider the case where :math:`a` is much larger than :math:`|T_m-T_0|`.
What is an appropriate scaling of the temperature?

.. removed !bsol ... !esol environment (because of the command-line option --without_solutions)

.. --- end exercise ---

.. --- begin exercise ---

.. _sec:scale:exer:ball_y_wdrag:

Problem 4: Scale a nonlinear ODE
--------------------------------

The velocity :math:`v(t)`
of a body moving vertically through a fluid in the gravity field,
with fluid drag and buoyancy, is governed by ODE

.. math::
         mv' = -\frac{1}{2}C_D\varrho A |v|v - mg + \varrho V g,\quad v(0)=v_0,

where :math:`t` is time, :math:`m` is the mass of the body, :math:`C_D` is a drag coefficient,
:math:`\varrho` is the density of the fluid, :math:`A` is the cross-sectional area
perpendicular to the motion, :math:`g` is the acceleration of gravity,
and :math:`V` is the volume of the body. Scale this ODE.

.. removed !bsol ... !esol environment (because of the command-line option --without_solutions)

Filename: ``scaled_vertical_motion_with_drag``.

.. --- end exercise ---

.. --- begin exercise ---

.. _sec:scale:exer:decay:jump:

Exercise 5: Implement a scaled model with jump
----------------------------------------------

Make software for the problem in the section :ref:`sec:scale:decay:jump`
so that you can produce Figure :ref:`sec:scale:decay:jump:fig`.

.. --- begin hint in exercise ---

**Hint.**
Follow the ideas for software in the section :ref:`sec:scale:decay:body`: use the
`decay_vc.py <http://tinyurl.com/o8pb3yy/decay_vc.py>`__ module as computational
engine and modify the
`falling_body.py <http://tinyurl.com/o8pb3yy/falling_body.py>`__ code.

.. --- end hint in exercise ---

Filename: ``decay_jump``.

.. --- end exercise ---

.. --- begin exercise ---

.. _sec:scale:exer:decay:cooling:

Exercise 6: Implement a scaled model for cooling
------------------------------------------------

Make software for the unscaled problem :ref:`(17) <Eq:scale:decay:cooling:model>`
where :math:`T_s` can be a function of time.
Use this implementation to compute the solution of the
scaled problem :ref:`(24) <Eq:scale:decay:cooling:model:scaled>`.

.. --- begin hint in exercise ---

**Hint.**
You may use the general software `decay_vc.py <http://tinyurl.com/o8pb3yy/decay_vc.py>`__
for computing with the cooling model.
See the section :ref:`sec:scale:decay:body` for more ideas.

.. --- end hint in exercise ---

Filename: ``decay_cooling1``.

.. --- end exercise ---

.. --- begin exercise ---

.. _scale:decay:exer:decay:step:

Problem 7: Scale variable coefficients
--------------------------------------

The goal of this exercise is to scale the problem
:math:`u^{\prime}(t) = -a(t)u(t) + b(t)`, :math:`u(0)=I`, when

.. math::
        
        a(t) =\left\lbrace\begin{array}{ll}
        Q, & t < s,\\ 
        Q - A, & t\geq s,\end{array}\right.
        \quad b = \left\lbrace\begin{array}{ll}
        \gamma t, & t < s,\\ 
        0, & t\geq s,\end{array}\right.
        

Here, :math:`Q,A,\gamma >0`.
Filename: ``decay_varcoeff``.

.. --- end exercise ---

.. --- begin exercise ---

.. _scale:decay:exer:cooling:Ts:

Exercise 8: Alternative scalings of a cooling model
---------------------------------------------------

Scale the model :ref:`(17) <Eq:scale:decay:cooling:model>`, with :math:`T_s`
given as in :ref:`(23) <Eq:scale:decay:cooling:Tst>`, using two alternative
scalings of :math:`T`: :ref:`(21) <Eq:scale:decay:cooling:Tbar2>` and
the simpler :math:`\bar T = T/T_0`. Does the type of scaling impact how
many dimensionless parameters we end up with?
Filename: ``decay_cooling2``.

.. --- end exercise ---

.. --- begin exercise ---

.. _scale:decay:exer:nonlin:logistic2:

Exercise 9: Alternative scalings of a cooling model
---------------------------------------------------

Implement the scaled model :ref:`(30) <Eq:sec:scale:decay:nonlinear:model1:scaled>`
and produce a plot with curves corresponding to various values of
:math:`\alpha` and :math:`p` to summarize how :math:`\bar u(\bar t)` look like.

.. --- begin hint in exercise ---

**Hint.**
A centered Crank-Nicolson-style
scheme for :ref:`(30) <Eq:sec:scale:decay:nonlinear:model1:scaled>`
can use an old time value for the nonlinear coefficient:

.. math::
         \frac{\bar u^{n+1} - \bar u^n}{\Delta t} =
        (1 - \alpha\bar u^n)^p\frac{1}{2}(\bar u^n + \bar u^{n+1}){\thinspace .}

.. --- end hint in exercise ---

Filename: ``growth``.

.. --- end exercise ---

.. --- begin exercise ---

.. _scale:vib:exer:projectile:

Exercise 10: Scale projectile motion
------------------------------------

We have the following mathematical model for the motion of a projectile
in two dimensions:

.. math::
         m\ddot\boldsymbol{x} + \frac{1}{2}C_D\varrho A|\dot\boldsymbol{x}|\dot\boldsymbol{x}
        = -mg\boldsymbol{j},\quad \boldsymbol{x}(0)=\boldsymbol{0},\ \dot\boldsymbol{x}(0)=v_0\cos\theta\boldsymbol{i} +
        v_0\sin\theta\boldsymbol{j}{\thinspace .}

Here, :math:`m` is the mass of the projectile, :math:`\boldsymbol{x}=x\boldsymbol{i} + y\boldsymbol{j}` is
the position vector of the projectile, :math:`\boldsymbol{i}` and :math:`\boldsymbol{j}`
are unit vectors along the :math:`x` and :math:`y` axes, respectively,
:math:`\ddot\boldsymbol{x}` and :math:`\dot\boldsymbol{x}` is the second- and first-order
time derivative of :math:`\boldsymbol{x}(t)`, :math:`C_D` is a drag coefficient
depending on the shape of the projectile (can be taken as 0.4 for a sphere),
:math:`\varrho` is the density of the air, :math:`A` is the cross section area
(can be taken as :math:`\pi R^2` for a sphere of radius :math:`R`), :math:`g` is gravity,
:math:`v_0` is the initial velocity of the projectile in a direction that makes
the angle :math:`\theta` with the ground.

**a)**
Neglect the air resistance term proportional to :math:`\dot\boldsymbol{x}` and solve
analytically for :math:`\boldsymbol{x}(t)`.

.. removed !bsol ... !esol environment (because of the command-line option --without_solutions)

**b)**
Make the model for projectile motion with air resistance non-dimensional.
Use the maximum height from the simplification in a) as length scale.

.. removed !bsol ... !esol environment (because of the command-line option --without_solutions)

**c)**
Make the model dimensionless again, but this time by demanding that
the scaled initial velocity is unity in :math:`x` direction.

.. removed !bsol ... !esol environment (because of the command-line option --without_solutions)

**d)**
A soccer ball has diameter :math:`R=11` cm and mass 0.43 kg, the density of air
is 1.2 :math:`\hbox{kg}\hbox{m}^{-3}`, a soft kick has velocity 10 km/h,
while a hard kick may have 120 km/h. Estimate the dimensionless parameter
in the scaled problem for a soft and a hard kick with
:math:`\theta` corresponding to 30 degrees. Solve the scaled
differential equation for these values and plot the trajectory (:math:`y` versus
:math:`x`) for the two cases.

.. removed !bsol ... !esol environment (because of the command-line option --without_solutions)

Filename: ``projectile``.

.. --- end exercise ---

.. --- begin exercise ---

.. _scale:decay:exer:predpray:

Problem 11: Scale a predator-prey model
---------------------------------------

.. index::
   single: Lotka-Volterra, predator-prey model

The evolution of animal populations with a predator and a prey (e.g.,
lynx and hares, or foxes and rabbits) can be described by the
Lotka-Volterra ODE system

.. _Eq:scale:decay:exer:predprey:eqH:

.. math::

    \tag{275}
    H^{\prime} = H(a - bL),
        
        

.. _Eq:scale:decay:exer:predprey:eqL:

.. math::

    \tag{276}
    L^{\prime} = L(dH - c),
        
        

.. _Eq:_auto82:

.. math::

    \tag{277}
    H(0)=H_0,
        
        

.. _Eq:_auto83:

.. math::

    \tag{278}
    L(0)=L_0{\thinspace .}
        
        

Here, :math:`H` is the number of animals of the prey (say hares)
and :math:`L` is the corresponding measure of the predator population (say lynx).
There are six parameters: :math:`a`, :math:`b`, :math:`c`, :math:`d`, :math:`H_0`, and :math:`L_0`.

The terms has the following meanings:

 * :math:`aH` is the exponential
   population growth of :math:`H` due to births and deaths and is governed by
   the access to nutrition,

 * :math:`-bHL` is the loss of preys because they are eaten by predators,

 * :math:`dHL` is the increase of preys because they eat predators (but only
   a fraction of the eaten preys, :math:`bHL`, contribute to population growth
   of the predator and therefore :math:`d < b`),

 * :math:`-cL` is the exponential decay in the predator population because of
   deaths (the increase is modeled by :math:`dHL`).

Dimensionless independent and dependent variables are introduced as usual
by

.. math::
         \bar t = \frac{t}{t_c},\quad
        \bar H = \frac{H}{H_c},\quad \bar L = \frac{L}{L_c},
        

where :math:`t_c`, :math:`H_c`, and :math:`L_c` are scales to be determined. Inserted
in the ODE problem we arrive at

.. _Eq:scale:decay:exer:predprey:eqH:s:

.. math::

    \tag{279}
    \frac{H_0}{t_c}\frac{d\bar H}{d\bar t} = H_0\bar H(a - bH_0\bar L),
        
        

.. _Eq:scale:decay:exer:predprey:eqL:s:

.. math::

    \tag{280}
    \frac{H_0}{t_c}\frac{d\bar L}{d\bar t} = H_0\bar L(dH_0\bar H - c),
        
        

.. _Eq:scale:decay:exer:predprey:eqH0:s:

.. math::

    \tag{281}
    H_c\bar H(0) = H_0,
        
        

.. _Eq:scale:decay:exer:predprey:eqL0:s:

.. math::

    \tag{282}
    L_c\bar H(0) = L_0{\thinspace .}
        
        

**a)**
Consider first a simple, intuitive scaling of :math:`H` and :math:`L` based on
initial conditions :math:`H_c=H_0`
and :math:`L_c=H_c`. This means that :math:`\bar H` starts out at unity and :math:`\bar L`
starts out as the fraction :math:`L_0/H_0`. Find a time scale and identify
dimensionless parameters in the scaled ODE problem.

.. removed !bsol ... !esol environment (because of the command-line option --without_solutions)

**b)**
Try a different scaling where the aim is to adjust the scales such that
the ODEs become as simple as possible, i.e, have as few dimensionless
parameters as possible. Compare with the scaling in a).

.. removed !bsol ... !esol environment (because of the command-line option --without_solutions)

**c)**
A more mathematical approach to determining suitable scales for :math:`H` and :math:`L`
consists in finding the stationary points :math:`(H,L)` of the ODE system,
where :math:`H^{\prime}=L^{\prime}=0`, and use such points as characteristic
sizes of the dependent variables. Show that :math:`H^{\prime}=L^{\prime}=0`
implies :math:`H=L=0` or :math:`L=a/b` and :math:`H=c/d`. Use :math:`H_c=a/b`, :math:`L_c=c/d`,
and find a time scale. Compare with the result in b).

.. removed !bsol ... !esol environment (because of the command-line option --without_solutions)

Filename: ``predator_prey``.

.. --- end exercise ---

.. --- begin exercise ---

.. _scale:decay:exer:competing_species:

Problem 12: Scale a model for competing species
-----------------------------------------------

.. index::
   single: Lotka-Volterra, competing species model

Let :math:`N_1(t)` and :math:`N_2(t)` be the number of animals in two
competing species. A generalized Lotka-Volterra model
is based on a logistic growth of each specie and a predator-prey like
interaction (cf. |nbsp| :ref:`scale:decay:exer:predprey`):

.. _Eq:_auto88:

.. math::

    \tag{283}
    \frac{dN_1}{dt} = r_1N_1\left( 1 - \frac{N_1}{M_1} - s_{12}\frac{N_2}{M_1}\right),
        
        

.. _Eq:_auto89:

.. math::

    \tag{284}
    \frac{dN_2}{dt} = r_2N_2\left( 1 - \frac{N_2}{M_2} - s_{21}\frac{N_1}{M_2}\right),
        
        

where :math:`r_1`, :math:`r_2`, :math:`M_1`, :math:`M_2`, :math:`s_{12}`, and :math:`s_{21}` are given constants.
The initial conditions specify :math:`N_1` and :math:`N_2` at :math:`t=0`.
Find suitable scales and derive a dimensionless ODE problem.

.. removed !bsol ... !esol environment (because of the command-line option --without_solutions)

Filename: ``competing_species``.

.. --- end exercise ---

.. --- begin exercise ---

.. _scale:decay:exer:sine:

Problem 13: Find the period of sinusoidal signals
-------------------------------------------------

**a)**
Plot the function

.. math::
         u(t) = A\sin(\omega t), 

for :math:`t\in [0, 8\pi/\omega]`. Choose :math:`\omega` and :math:`A`.

.. removed !bsol ... !esol environment (because of the command-line option --without_solutions)

**b)**
The *period* :math:`P` of :math:`u` is the shortest distance between two peaks (where
:math:`u=A`). Show mathematically that

.. math::
         P = \frac{2\pi}{\omega}{\thinspace .}

Frequently, :math:`P` is also referred to as the *wave length* of :math:`u`.

.. removed !bsol ... !esol environment (because of the command-line option --without_solutions)

**c)**
Plot the damped signal :math:`u(t)=e^{-at}\sin (\omega t)` over four periods
of :math:`sin(\omega t)`. Choose :math:`\omega`, :math:`A`, and :math:`a`.

.. removed !bsol ... !esol environment (because of the command-line option --without_solutions)

**d)**
What is the period of :math:`u(t)=e^{-at}\sin (\omega t)`? We define the
period :math:`P` as the shortest distance between two peaks of the signal.

.. --- begin hint in exercise ---

**Hint.**
Use that :math:`v = p\cos(\omega t) + q\sin (\omega t)` can be rewritten
as :math:`v = B\cos(\omega t - \phi)` with :math:`B=\sqrt{p^2 + q^2}` and
:math:`\phi = \tan^{-1}(p/q)`. Use such a rewrite of :math:`u'` to find the peaks of
:math:`u` and then the period.

.. --- end hint in exercise ---

.. removed !bsol ... !esol environment (because of the command-line option --without_solutions)

Filename: ``sine_period``.

.. Closing remarks for this Problem

Remarks          (1)
~~~~~~~~~~~~~~~~~~~~

The *frequency* is the number of up and down cycles in one unit time.
Since there is one cycle in a period :math:`P`, the frequency is :math:`f =1/P`,
measured in Hz.
The *angular frequency* :math:`\omega` is then :math:`\omega = 2\pi/P = 2\pi f`.

.. --- end exercise ---

.. --- begin exercise ---

.. _sec:scale:exer:pendulum:

Problem 14: Scale the pendulum equation
---------------------------------------

The equation for a so-called simple pendulum with a mass :math:`m` at the end is

.. _Eq:_auto90:

.. math::

    \tag{285}
    mL\ddot\theta + mg\sin\theta = 0,
        
        

where :math:`\theta(t)` is the angle with the vertical, :math:`L` is the length of
the pendulum, and :math:`g` is the acceleration of gravity.

A physical pendulum with moment of inertia :math:`I` is governed by
a similar equation,

.. _Eq:_auto91:

.. math::

    \tag{286}
    I\ddot\theta + mgL\sin\theta = 0{\thinspace .}
        
        

Both equations have the initial conditions :math:`\theta(0)=\Theta` and
:math:`\theta'(0)=0` (start at rest).

Use :math:`\theta` as dimensionless unknown, find a proper time scale,
and scale both differential equations.

.. removed !bsol ... !esol environment (because of the command-line option --without_solutions)

Filename: ``pendulum``.

.. --- end exercise ---

.. --- begin exercise ---

.. _sec:scale:exer:binary_star:

Exercise 15: Scale the ODEs for a binary star
---------------------------------------------

The equations for a `binary star <https://en.wikipedia.org/wiki/Binary_star>`__,
or a planet and a moon, are

.. _Eq:_auto92:

.. math::

    \tag{287}
    m_A\ddot\boldsymbol{x}_A = \boldsymbol{F},
        
        

.. _Eq:_auto93:

.. math::

    \tag{288}
    m_B\ddot\boldsymbol{x}_B = -F,
        
        

where :math:`\boldsymbol{x}_A` is the position of object (star) A, and :math:`\boldsymbol{x}_B` is the position
object B. The corresponding masses are :math:`m_A` and :math:`m_B`.
The only force is the gravity force

.. math::
         \boldsymbol{F} = \frac{Gm_Am_B}{||\boldsymbol{r}||^3}\boldsymbol{r},

where

.. math::
         \boldsymbol{r}(t) = \boldsymbol{x}_A(t) - \boldsymbol{x}_B(t),

and :math:`G` is the gravitational constant: :math:`G=6.674\cdot 10^{-11}\hbox{ Nm}^2/\hbox{kg}^2`. A problem with these equations is that the parameters are very large
(:math:`m_A`, :math:`m_B`, :math:`||\boldsymbol{r}||`) or very small (:math:`G`). The rotation time
for binary starts can be very small or large as well.

.. removed !bsol ... !esol environment (because of the command-line option --without_solutions)

Filename: ``binary_star``.

.. --- end exercise ---

.. --- begin exercise ---

.. _scale:vib:exer:Duffing:

Problem 16: Scale Duffing's equation
------------------------------------

Duffing's equation is a vibration equation with linear and cubic
spring terms:

.. math::
         mu'' + k_0u + k_1u^3 = 0,\quad u(0)=U_0,\ u'(0)=0{\thinspace .}

Scale this problem.

.. removed !bsol ... !esol environment (because of the command-line option --without_solutions)

Filename: ``Duffing_eq``.

.. --- end exercise ---

.. --- begin exercise ---

.. _scale:vib:exer:stationary_Couette:

Problem 17: Scale a stationary Couette flow
-------------------------------------------

A fluid flows between two flat plates, with one plate at rest while
the other moves with velocity :math:`U_0`. This classical flow case is known as
stationary Couette flow.

**a)**
Directing the :math:`x` axis in the flow direction and letting :math:`y` be
a coordinate perpendicular to the walls, one can assume that
the velocity field simplifies to :math:`\boldsymbol{u} = u(y)\boldsymbol{i}`.
Show from the Navier-Stokes equations that the boundary-value problem
for :math:`u(y)` is

.. math::
         u^{\prime\prime}(u) = 0,\quad u(0)=0,\ u(H)=U_0{\thinspace .}

We have here assumed at :math:`y=0` corresponds to the plate at rest and
that :math:`y=H` represents the plate that moves. There are no pressure
gradients present in the flow.

**b)**
Scale the problem in a) and show that the result has no physical parameters
left in the model:

.. math::
         \frac{d^2\bar u}{d\bar y^2} = 0,\quad \bar u(0)=0,\ \bar u(1)=1{\thinspace .}

**c)**
We can compute :math:`\bar u(\bar y)` from one numerical simulation (or a
straightforward integration of the differential equation). Set up
the formula that finds :math:`u(y; H, u_0)` from :math:`\bar u(\bar y)` for any
values of :math:`H` and :math:`U_0`.

Filename: ``stationary_Couette``.

.. Closing remarks for this Problem

Remarks          (2)
~~~~~~~~~~~~~~~~~~~~

The problem for :math:`u` is a classical two-point boundary-value problem
in applied mathematics and arises in a number of applications, where
Couette flow is just one example. Heat conduction is another
example: :math:`u` is temperature, and the heat conduction equation for
an insulated rod reduces to :math:`u^{\prime\prime}=0` under stationary
conditions and no heat source.
Controlling the end :math:`x=0` at 0 degrees Celsius the other end :math:`x=L`
at :math:`U_0` degrees
Celsius, gives the same boundary conditions as in the above flow problem.
The scaled problem is of course the same whether we have flow of
fluid or heat.

.. --- end exercise ---

.. --- begin exercise ---

.. _scale:vib:exer:starting_Couette:

Problem 18: Scale a starting Couette flow
-----------------------------------------

A fluid is confined in a channel with two planar walls :math:`z=0` and :math:`z=H`.
The fluid is at rest. At time :math:`t=0` the upper wall is suddenly set in
motion with a velocity :math:`U\boldsymbol{i}`. We assume that the velocity is
directed along the :math:`x` axis: :math:`\boldsymbol{u} = u(x,z,t)\boldsymbol{i}`. From the equation of continuity, :math:`\nabla\cdot\boldsymbol{u} =0`, we get that :math:`\partial u/\partial x = 0` such
that :math:`\boldsymbol{u} = u(z,t)\boldsymbol{i}`. The boundary conditions are :math:`\boldsymbol{u}=0` at the lower
wall :math:`z=0` and :math:`\boldsymbol{u} = U\boldsymbol{i}` at the upper wall :math:`z=H`. Assume that the
pressure is constant everywhere and that there are no body forces.

**a)**
Start with the incompressible Navier-Stokes equations and the
assumption :math:`\boldsymbol{u} = u(z,t)\boldsymbol{i}`. Derive an initial-boundary value problem
for :math:`u(z,t)`. Scale the problem.

.. removed !bsol ... !esol environment (because of the command-line option --without_solutions)

**b)**
Start with the dimensionless Navier-Stokes equations and use
the assumption :math:`\bar\boldsymbol{u} = \bar u(\bar z,\bar t)\boldsymbol{i}` to reduce
the problem. The resulting equation now contains a Reynolds
number, i.e., one more physical parameter than in a).
Why is this an inferior approach to scaling the problem?

.. removed !bsol ... !esol environment (because of the command-line option --without_solutions)

**c)**
Can you construct a heat conduction problem that has the same solution
:math:`\bar u(\bar z,\bar t)` as in a)?

.. removed !bsol ... !esol environment (because of the command-line option --without_solutions)

**d)**
Describe how the scaled problem in this exercise can be solved
by a program that solves the following diffusion problem with dimensions:

.. math::
        
        \frac{\partial u}{\partial t} &=
        {\alpha} \frac{\partial^2 u}{\partial z} + f(x,t),\\ 
        u(x,0) &= I(x),\\ 
        u(0,t) & =U_0(t),\\ 
        u(L,t) & =U_L(t){\thinspace .}
        

.. removed !bsol ... !esol environment (because of the command-line option --without_solutions)

Filename: ``starting_Couette``.

.. --- end exercise ---

.. --- begin exercise ---

.. _scale:vib:exer:Couette_wpressure:

Exercise 19: Scale Couette flow with pressure gradient
------------------------------------------------------

Viscous fluid flow between two infinite flat plates :math:`z=0` and :math:`z=H`
is governed by

.. _Eq:_auto96:

.. math::

    \tag{289}
    \mu u''(z) = -\beta
        
        

.. _Eq:_auto97:

.. math::

    \tag{290}
    u(0) = 0,
        
        

.. _Eq:_auto98:

.. math::

    \tag{291}
    u(H) = U_0{\thinspace .}
        
        

Here, :math:`u(z)` is the fluid velocity in :math:`x` direction (perpendicular to the
:math:`z` axis), :math:`\mu` is the dynamic viscosity of the fluid, :math:`\beta` is
a positive constant pressure gradient, and :math:`U_0` is the
constant velocity of the upper
plate :math:`z=H` in :math:`x` direction.

**a)**
Find the exact solution :math:`u(z)`. Point out how :math:`\beta` and :math:`U_0`
influence the magnitude of :math:`u`.

.. removed !bsol ... !esol environment (because of the command-line option --without_solutions)

**b)**
Scale the problem.

.. removed !bsol ... !esol environment (because of the command-line option --without_solutions)

[**hpl 31**: Could extend to time-dependent case, but this will involve three time scales...]

Filename: ``Couette_wpressure``.

.. --- end exercise ---

.. --- begin exercise ---

.. _scale:exer:pipeflow:pulsatile:

Exercise 20: Scale pulsatile pipeflow
-------------------------------------

The flow of a viscous fluid in a straight pipe with circular
cross section with radius :math:`R` is governed by

.. _Eq:_auto105:

.. math::

    \tag{292}
    \varrho\frac{\partial u}{\partial t} = \frac{\mu}{r}\frac{\partial}{\partial r}
        \left(r\frac{\partial u}{\partial r}\right) - P(t),  r\in (0,R),\ t\in (0,T],
        
        

.. _Eq:_auto106:

.. math::

    \tag{293}
    \frac{\partial u}{\partial r}(0,t) = 0,  t\in (0,T],
        
        

.. _Eq:_auto107:

.. math::

    \tag{294}
    u(R,t) = 0,  t\in (0,T],
        
        

.. _Eq:_auto108:

.. math::

    \tag{295}
    u(r,0) = 0,  r\in [0,R].
        
        

The quantity :math:`u(r,t)` is the fluid velocity, :math:`P(t)` is a given
pressure gradient, :math:`\varrho` is the fluid density, and :math:`\mu` is the
dynamic viscosity.

Assume :math:`P(t) = A\cos\omega t`. Scale the problem and identify
appropriate dimensionless numbers. The assume :math:`P(t)` is a more
complicated function, but still period with period :math:`p`.
Discuss how the scaling can be extended to this case.

.. removed !bsol ... !esol environment (because of the command-line option --without_solutions)

Filename: ``pipeflow``.

.. --- end exercise ---

.. --- begin exercise ---

.. _scale:exer:cable_eq:

Exercise 21: Scale the linear cable equation
--------------------------------------------

A key PDE in neuroscience is the `cable equation <https://en.wikipedia.org/wiki/Cable_theory>`__, here given in its simplest linear form:

.. _Eq:scale:exer:cable_eq:PDE:

.. math::

    \tag{296}
    \tau\frac{\partial u}{\partial t} = \lambda^2\frac{\partial^2 u}{\partial t^2}
        -u{\thinspace .}
        
        

The unknown :math:`u` is the voltage (measured in volt) associated with
an electric current along one-dimensional dendrites ("cables")
in neural networks, while :math:`\tau` and :math:`\lambda` are given parameters.

Scale :ref:`(296) <Eq:scale:exer:cable_eq:PDE>` in three ways: 1) let all terms in
the scaled equation have unit coefficients, 2) use the domain size
:math:`L` as spatial scale and base the time scale on diffusion, 3) use the
domain size :math:`L` as spatial scale and base the time scale on
reaction, i.e., the :math:`-u` term.

.. removed !bsol ... !esol environment (because of the command-line option --without_solutions)

Filename: ``cable_eq``.

.. --- end exercise ---

.. --- begin exercise ---

.. _scale::exer:elasticity:vibmodels:

Exercise 22: Comparison of vibration models for elastic structures
------------------------------------------------------------------

The time scale for displacement in elastic structures is, according to
the section :ref:`scale:elasticity:timedep`, :math:`t_c=L\sqrt{\varrho/\mu}` if we
assume constant density :math:`\varrho` and constant shear modulus :math:`\mu` for
the structure. The purpose of this exercise is to compare this time
scale with the time scales of related models.

**a)**
Longitudinal waves in a bar can be modeled approximately by the PDE

.. math::
         \varrho\frac{\partial^2 u}{\partial t^2} + E\frac{\partial^2 u}{\partial x^2} = 0,

where :math:`u(x,t)` is the displacement along the bar, and :math:`E` is Young's modulus,
related to the shear modulus :math:`\mu` through

.. math::
         E = 2\mu (1+\nu),

where :math:`\nu\in (0,0.5]` is Poisson's ratio.
Find the time scale for the longitudinal waves and compare with the :math:`t_c`
for displacements in a three-dimensional body.

.. removed !bsol ... !esol environment (because of the command-line option --without_solutions)

**b)**
Vertical vibrations of a beam are governed by the PDE

.. math::
         \rho\frac{\partial^2 u}{\partial t^2} + EI\frac{\partial^4 u}{\partial x^4} = 0,

where :math:`u(x,t)` is the vertical displacement along the beam,
:math:`\rho` is the mass per length of the beam,
:math:`E` is Young's modulus, and :math:`I` is the moment of inertia. For a
rectangular cross section of with :math:`b` and height :math:`h`, :math:`I=\frac{1}{12}bh^3`.
Compare the time scale for these vibrations with the time scale :math:`t_c`
for three-dimensional elasticity.

.. removed !bsol ... !esol environment (because of the command-line option --without_solutions)

.. --- end exercise ---

.. --- begin exercise ---

.. _scale:exer:poroelasticity:

Exercise 23: Scale the equations of quasi-static poro-elasticity
----------------------------------------------------------------

Flow through a porous elastic medium may induce stress and deformation.
This process is known as poro-elasticity and is governed by the
following equations for a homogeneous medium:

.. _Eq:_auto109:

.. math::

    \tag{297}
    (\lambda + \mu)\nabla (\nabla\cdot\boldsymbol{u}) + \mu\nabla^2\boldsymbol{u} = -\alpha\nabla p -
        \varrho\boldsymbol{f},
        
        

.. _Eq:_auto110:

.. math::

    \tag{298}
    S\frac{\partial p}{\partial t} = \frac{K}{\mu_f}\nabla^2 p +
        \alpha \frac{\partial}{\partial t}\nabla\cdot\boldsymbol{u},
        
        

where :math:`\boldsymbol{u}(\boldsymbol{x},t)` is the displacement field, :math:`\lambda` and :math:`\mu` are
Lame's elasticity parameters, :math:`\alpha\in [0,1]`, :math:`\boldsymbol{f}` is the body
force, here assumed constant (usually gravity, :math:`\boldsymbol{f} = -g\boldsymbol{k}`,
:math:`S` is a so-called storage coefficient, :math:`p(\boldsymbol{x},t)` is the fluid pressure,
:math:`K` is the medium's permeability, :math:`\mu_f` is the dynamic viscosity of
the fluid, and :math:`\varrho` is the density of the fluid-solid mixture:

.. math::
         \varrho = (1-\phi) \varrho_s + \phi\varrho_f, 

with :math:`\varrho_f` being the density of the fluid, :math:`\varrho_s` the density
of the solid, and :math:`\phi` the porosity of the elastic medium.
The equations are known as Biot's equations of poro-elasticity and written
here in a quasi-static form where elastic waves are neglected.

Scale this partial differential equation model, assuming that
:math:`\lambda`, :math:`\mu`, :math:`\alpha`, :math:`\boldsymbol{f}`, :math:`\varrho`, :math:`\phi`, :math:`\varrho_s`,
:math:`\varrho_f`, :math:`S`, :math:`\mu_f`, and :math:`K` are all constants.

.. --- begin hint in exercise ---

**Hint.**
The model is very similar to the equations of thermo-elasticity in
the section :ref:`scale:elasticity:thermo`.

.. --- end hint in exercise ---

Filename: ``poroelasticity``.

.. --- end exercise ---

.. --- begin exercise ---

.. _scale::exer:suggest:

Exercise 24: Suggestions...
---------------------------

Projects:

 * Poisson problem, membrane, see Nayfeh chapter 1, stationary and time

 * diffusion with oscillating :math:`f(x,t)`,
   oscillating pressure in tube (channel first)

 * Helmholtz

 * two metal pieces in contact

 * boundary layer fluid flow problem, with/without thermal effects

 * Vertical motion in the gravity field, two time scales, discuss

 * sliding box, see ``vib`` exercise

.. --- end exercise ---

