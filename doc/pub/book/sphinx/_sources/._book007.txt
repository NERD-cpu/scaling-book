.. !split

.. _sec:scale:diffu:

The diffusion equation
======================

The diffusion equation in a one-dimensional homogeneous medium reads

.. _Eq:sec:scale:diffu:pde1:

.. math::

    \tag{132}
    \frac{\partial u}{\partial t} =
        {\alpha}\frac{\partial^2 u}{\partial x^2}, \quad  x\in (0,L),\ t\in (0,T],
        
        

where :math:`{\alpha}` is the diffusion coefficient. The
multi-dimensional generalization to a heterogeneous medium
and a source term takes the form

.. _Eq:sec:scale:diffu:pde1:3D:

.. math::

    \tag{133}
    \frac{\partial u}{\partial t} =
        \nabla\cdot\left({\alpha} \nabla u\right) + f, \quad  x,y,z\in \Omega,\ t\in (0,T]{\thinspace .}
        
        

We first look at scaling the PDE itself, and thereafter we discuss
some types of boundary conditions and how to scale the complete
initial-boundary value problem.

.. _sec:scale:diffu:homo1D:

Homogeneous 1D diffusion equation
---------------------------------

To make :ref:`(132) <Eq:sec:scale:diffu:pde1>` dimensionless,
we introduce as usual dimensionless dependent and independent variables:

.. math::
         \bar x = \frac{x}{x_c},
        \quad \bar t = \frac{t}{t_c}, \quad \bar u =\frac{u}{u_c}{\thinspace .}

Inserting the dimensionless quantities in the one-dimensional
PDE :ref:`(132) <Eq:sec:scale:diffu:pde1>` results in

.. _Eq:sec:scale:diffu:pde1:d0:

.. math::

    \tag{134}
    \frac{\partial \bar u}{\partial \bar t} =
        \frac{t_c{\alpha}}{L^2}
        \frac{\partial^2 \bar u}{\partial \bar x^2}, \quad  \bar x\in (0,1),\ \bar t\in (0,\bar T = T/t_c]{\thinspace .}
        
        

Arguing as for the wave equation that the scaling should result in

.. math::
         \frac{\partial \bar u}{\partial \bar t}\hbox{ and }
        \frac{\partial^2 \bar u}{\partial \bar x^2}

of the same size (about unity),
implies :math:`t_c{\alpha}/L^2=1` and therefore :math:`t_c = L^2/{\alpha}`.

Insight through an analytical solution can alternatively
help with choosing :math:`t_c`.
One can show that :math:`u=Ae^{-pt}\sin (kx)` is a solution of
:ref:`(132) <Eq:sec:scale:diffu:pde1>` if :math:`p={\alpha} k^2`, for any :math:`k`.
This is the typical solution arising from separation of variables
and reflects the dynamics of the space and time in the PDE.
Exponential decay in
time is a characteristic feature of diffusion processes, and
the e-folding time can then be taken as a time scale. This means
:math:`t_c = 1/p \sim k^{-2}`. Since :math:`k` is related to the spatial
wave length :math:`\lambda`
through :math:`k=2\pi/\lambda`, it means that :math:`t_c` depends strongly on the wave
length of the sine term :math:`\sin(kx)`.
In particular, short waves (as found in noisy signals) with
large :math:`k` decay very rapidly.
For the overall solution we are interested in how the longest meaningful
wave decays and use that time scale for :math:`t_c`. The longest wave
typically has half a wave length over the domain :math:`[0,L]`:
:math:`u = Ae^{-pt}\sin(\pi x/L)` (:math:`k=\pi/L`), provided :math:`u(0,t)=u(L,t)=0`
(with :math:`u_x(L,t)=0`, the longest wave is :math:`L/4`, but we look at the
case with the wave length :math:`L/2`). Then :math:`t_c=L^2/{\alpha} \pi^{-2}`,
but the factor :math:`\pi^{-2}` is not important and we simply choose
:math:`t_c=L^2/{\alpha}`, which equals the time scale we arrived at above.
We may say that :math:`t_c` is the time it takes for the diffusion to
significantly change the solution in the entire domain.

Another fundamental solution of the diffusion equation is the
diffusion of a Gaussian function: :math:`u(x,t)=(4\pi{\alpha}
t)^{-1/2}\exp{(-x^2/(4{\alpha} t))}`. For the diffusion to be significant
at a distance :math:`x=L`, we may demand the exponential factor to have a
value of :math:`e^{-1}\approx 0.37`, which implies :math:`t=L^2/(4{\alpha})`, but the
factor 4 is not of importance, so again, a relevant time scale is
:math:`t_c=L^2/{\alpha}`.

The scale :math:`u_c` is chosen according to the initial condition:
:math:`u_c=\max_{x\in(0,L)}|I(x)|`. For a diffusion equation :math:`u_t={\alpha} u_{xx}`
with :math:`u=0` at the boundaries :math:`x=0,L`, the solution is bounded by
the initial condition :math:`I(x)`. Therefore, the listed choice of :math:`u_c`
implies that
:math:`|u|\leq 1`. (The solution :math:`u=Ae^{-pt}\sin (kx)` is such an example
if :math:`k=n\pi/L` for integer :math:`n` such that :math:`u=0` for :math:`x=0` and :math:`x=L`.)

The resulting dimensionless PDE becomes

.. _Eq:sec:scale:diffu:pde1:d:

.. math::

    \tag{135}
    \frac{\partial \bar u}{\partial \bar t} =
        \frac{\partial^2 \bar u}{\partial \bar x^2}, \quad  \bar x\in (0,1),\ \bar t\in (0,\bar T],
        
        

with initial condition

.. math::
         \bar u(\bar x, 0) = \bar I(\bar x) = \frac{I(x_c\bar x)}{\max_x |I(x)|}{\thinspace .}

Notice that :ref:`(135) <Eq:sec:scale:diffu:pde1:d>` is without physical parameters,
but there may be parameters in :math:`I(x)`.

Generalized diffusion PDE
-------------------------

Turning the attention to :ref:`(133) <Eq:sec:scale:diffu:pde1:3D>`, we introduce
the dimensionless diffusion coefficient

.. math::
         \bar{\alpha}(\bar x,\bar y,\bar z) =
        {\alpha}_c^{-1}{\alpha} (x_c\bar x, y_c\bar y, z_c\bar z),

typically with

.. math::
         {\alpha}_c = \max_{x,y,z}{\alpha}(x,y,z){\thinspace .}

The length scales are

.. math::
         \bar x = \frac{x}{x_c},\quad \bar y = \frac{y}{y_c},\quad
        \bar z = \frac{z}{z_c}{\thinspace .}
        

We scale :math:`f` in a similar fashion:

.. math::
         \bar f(\bar x, \bar y, \bar z, \bar t)
        = f_c^{-1}f(\bar xx_c, \bar yy_c \bar zz_c, \bar tt_c),

with

.. math::
         f_c = \max_{x,y,z,t}|f(x,y,z,t)|{\thinspace .}

Also assuming
that :math:`x_c=y_c=z_c=L`, and :math:`u_c=\max_{x,y,z}(I(x,y,z)`,
we end up with the scaled PDE

.. _Eq:sec:scale:diffu:pde1:3D:d:

.. math::

    \tag{136}
    \frac{\partial \bar u}{\partial \bar t} =
        \nabla\cdot\left(\bar{\alpha} \bar\nabla \bar u\right) + \beta\bar f, \quad  \bar x,\bar y,\bar z\in \bar \Omega,\ \bar t\in (0,\bar T]{\thinspace .}
        
        

Here, :math:`\bar\nabla` means differentiation with respect to dimensionless
coordinates :math:`\bar x`, :math:`\bar y`, and :math:`\bar z`. The dimensionless parameter
:math:`\beta` takes the form

.. math::
         \beta = \frac{t_cf_c}{u_c} = \frac{L^2}{{\alpha}}
        \frac{\max_{x,y,z,t}|f(x,y,z,t)|}{\max_{x,y,z}|I(x,y,z)|}{\thinspace .}

The scaled initial condition is :math:`\bar u = \bar I` as in the 1D case.

An alternative choice of :math:`u_c` is to make the coefficient :math:`t_cf_c/u_c`
in the source term unity. The scaled PDE now becomes

.. _Eq:sec:scale:diffu:pde1:3D:d2:

.. math::

    \tag{137}
    \frac{\partial \bar u}{\partial \bar t} =
        \nabla\cdot\left(\bar{\alpha} \bar\nabla \bar u\right) + f,
        
        

but the initial condition features the :math:`\beta` parameter:

.. math::
         \bar u(\bar x, \bar y, \bar z, 0) = \frac{I}{t_cf_c} =
        \beta^{-1}\bar I(\bar x,\bar y,\bar z){\thinspace .}
        

The :math:`\beta` parameter can be interpreted as the ratio of the source
term and the terms with :math:`u`:

.. math::
         \beta = \frac{f_c}{u_c/t_c}\sim \frac{|f|}{|u_t|},\quad
        \beta = \frac{f_c}{u_c/t_c} = \frac{f_c}{L^2/t_c u_c/L^2}\sim
        \frac{|f_c|}{|{\alpha}\nabla^2 u|}{\thinspace .}
        

We may check that :math:`\beta` is really non-dimensional. From the PDE,
:math:`f` must have the same dimensions as :math:`\partial u/\partial t`, i.e.,
:math:`[\Theta\hbox{T}^{-1}]`.
The dimension of :math:`{\alpha}` is more intricate, but from the term
:math:`{\alpha} u_{xx}` we know that :math:`u_{xx}` has dimensions :math:`[\Theta\hbox{L}^{-2}]`,
and then :math:`{\alpha}` must have dimension :math:`[\hbox{L}^2\hbox{T}^{-1}]`
to match the target :math:`[\Theta\hbox{T}^{-1}]`.
In the expression for :math:`\beta` we get
:math:`[\hbox{L}^2\Theta\hbox{T}^{-1}(\hbox{L}^2\hbox{T}^{-1}\Theta)^{-1}]`,
which equals 1 as it should.

Jump boundary condition
-----------------------

A classical one-dimensional heat conduction problem goes as
follows. An insulated rod at some constant temperature :math:`U_0` is
suddenly heated from one end (:math:`x=0`), modeled as a constant Dirichlet
condition :math:`u(0,t)=U_L\neq U_0` at that end. That is, the boundary
temperature jumps from :math:`U_0` to :math:`U_1` at :math:`t=0`. All the other surfaces
of the rod are insulated such that a one-dimensional model is
appropriate, but we must explicitly demand :math:`u_x(L,t)=0` to incorporate
the insulation condition in the one-dimensional model at the end
of the domain :math:`x=L`.  Heat cannot
escape, and since we supply heat at :math:`x=0`, all of the material will
eventually be warmed up to the temperature :math:`U_1`: :math:`u\rightarrow U_1`
as :math:`t\rightarrow\infty`.

The initial-boundary value problem reads

.. _Eq:scale:heat:pde3:

.. math::

    \tag{138}
    \frac{\partial u}{\partial t} =
        {\alpha} \frac{\partial^2 u}{\partial x^2},
        \quad   x\in (0,L),\ t\in (0, T],
        
        

.. _Eq:scale:heat:pde3:ic:u:

.. math::

    \tag{139}
    u(x,0) = U_0,
        \quad  x\in [0,L],
        
        

.. _Eq:scale:heat:pde3:bc:0:

.. math::

    \tag{140}
    u(0, t)  = U_1,
        \quad   t\in (0, T],
        
        

.. _Eq:scale:heat:pde3:bc:L:

.. math::

    \tag{141}
    \frac{\partial}{\partial x} u(L, t)  = 0,
        \quad  t\in (0, T].
        
        

The diffusion coefficient is related to heat transfer parameters
by :math:`{\alpha} = k/(\varrho c)`, where :math:`k` is the heat conduction coefficient,
:math:`\varrho` is the density, and :math:`c` is a specific heat capacity parameter.

The natural dimensionless temperature for this problem is

.. math::
         \bar u = \frac{u - U_0}{U_1 - U_0},

since this choice makes :math:`\bar u\in [0,1]`. The reason is that :math:`u` is bounded by
the initial and boundary conditions (in the absence of a source term in
the PDE),
and we have
:math:`\bar u(\bar x,0)=0`, :math:`\bar u(\bar x,\infty)=1`, and :math:`\bar u(0,\bar t)=1`.

The choice of :math:`t_c` is as in the previous cases. We arrive at
the dimensionless initial-boundary value problem

.. _Eq:scale:heat:pde3:d:

.. math::

    \tag{142}
    \frac{\partial \bar u}{\partial \bar t} =
        \frac{\partial^2 \bar u}{\partial \bar x^2},
        \quad   \bar x\in (0,1),\ \bar t\in (0, \bar T],
        
        

.. _Eq:scale:heat:pde3:ic:u:d:

.. math::

    \tag{143}
    \bar u(\bar x,0) = 0,
        \quad  \bar x\in [0,1],
        
        

.. _Eq:scale:heat:pde3:bc:0:d:

.. math::

    \tag{144}
    \bar u(0, \bar t)  = 1,
        \quad   \bar t\in (0, \bar T],
        
        

.. _Eq:scale:heat:pde3:bc:L:d:

.. math::

    \tag{145}
    \frac{\partial}{\partial \bar x} u(1, \bar t)  = 0,
        \quad  \bar t\in (0, \bar T].
        
        

The striking feature is that there are no physical parameters left in
this problem. One simulation can be carried out for :math:`\bar u(\bar x,\bar t)`,
and the temperature in a rod of any material and any constant initial and
boundary temperature can be retrieved by

.. math::
         u(x,t) = U_0 + (U_1-U_0)\bar u(x/L, t{\alpha}/L^2){\thinspace .}

[**hpl 13**: Include simulation results.]

Oscillating Dirichlet condition
-------------------------------

[**hpl 14**: Do we need paragraph headings here?]

Now we address a heat equation problem where the temperature is
oscillating on the boundary :math:`x=0`:

.. _Eq:scale:heat:pde2:

.. math::

    \tag{146}
    \frac{\partial u}{\partial t} =
        {\alpha} \frac{\partial^2 u}{\partial x^2},
        \quad   x\in (0,L),\ t\in (0, T],
        
        

.. _Eq:scale:heat:pde2:ic:u:

.. math::

    \tag{147}
    u(x,0) = U_0,
        \quad  x\in [0,L],
        
        

.. _Eq:scale:heat:pde2:bc:0:

.. math::

    \tag{148}
    u(0, t)  = U_0 + A\sin(\omega t),
        \quad   t\in (0, T],
        
        

.. _Eq:scale:heat:pde2:bc:L:

.. math::

    \tag{149}
    \frac{\partial}{\partial x} u(L, t)  = 0,
        \quad  t\in (0, T].
        
        

One important physical application is temperature oscillations in the
ground, either day and night variations
at a short temporal and spatial scale, or seasonal variations in the
Earth's crust.
An important modeling assumption is :ref:`(149) <Eq:scale:heat:pde2:bc:L>`,
which means that the boundary :math:`x=L` is placed sufficiently far from :math:`x=0`
such that the solution is much damped and basically constant so
:math:`u_x=0` is a reasonable condition.

Scaling          (7)
~~~~~~~~~~~~~~~~~~~~

Since the boundary temperature is oscillating around the initial
condition, we expect :math:`u\in [U_0-A,U_0+A]`.
The dimensionless temperature is therefore taken as

.. math::
         \bar u = \frac{u-U_0}{2A},

such that :math:`\bar u\in [-1,1]`.

What is an appropriate time scale? There will be two time scales involved,
the oscillations :math:`\sin(\omega t)` with period :math:`P=2\pi/\omega` at
the boundary and the "speed of diffusion", or more specifically
the "speed of heat conduction" in the present context,
where :math:`t_c=L^2/{\alpha}` is the appropriate scale.

As usual, investigating the exact solution of the model problem can
illuminate the involved scales. For this particular initial-boundary
value problem the exact solution as :math:`t\rightarrow\infty` (such that
the initial condition :math:`u(x,0)=U_0` is forgotten) can be shown to be

.. _Eq:scale:heat:daynight:sol:

.. math::

    \tag{150}
    u(x,t) = U_0 - Ae^{-bx}\sin (bx - \omega t),\quad b =\sqrt{\frac{\omega}{2{\alpha}}}{\thinspace .}
        
        

This solution is of the form :math:`e^{-bx}g(x-ct)`, i.e., a damped wave that
moves to the right with velocity :math:`c` and a damped amplitude :math:`e^{-bx}`.
This is perhaps more easily seen if we make a rewrite

.. math::
         u(x,t) = U_0 - Ae^{-bx}\sin\left(b(x - ct)\right),\quad
        c=\omega/b = \sqrt{2{\alpha}\omega},\  b =\sqrt{\frac{\omega}{2{\alpha}}}{\thinspace .}

The boundary oscillations lead to the time scale :math:`t_c=1/\omega`.
The speed of the wave suggests another time scale: the time it
takes to propagate through the domain, which is :math:`L/c`, and
hence :math:`t_c = L/c = L/\sqrt{2{\alpha}\omega}`.

One may argue that :math:`L` is not the appropriate length scale, because
:math:`u` is damped by :math:`e^{-bx}` so for :math:`x > 4/b`, :math:`u` is close to zero.
We may instead use :math:`1/b` as length scale, which is the e-folding distance of the
damping factor, and base
:math:`t_c` on the time it takes a signal to propagate one length scale,
:math:`t_c^{-1}=bc=\omega`. Similarly, the time scale based on
the "speed of diffusion" changes to
:math:`t_c^{-1}= b^2{\alpha} = \frac{1}{2}\omega` if we employ :math:`1/b` as length scale.

To summarize, we have three candidates for the time scale:
:math:`t_c=L^2/{\alpha}`, :math:`t_c=2/\omega`, and :math:`t_c=1/\omega`.

Let us look at the dimensionless exact solution to see if it can help
with the choice of scales.  We introduce the dimensionless parameters

.. math::
         \beta = bx_c = x_c\sqrt{\frac{\omega}{2{\alpha}}},\quad
        \gamma = \omega t_c{\thinspace .}

The scaled solution becomes

.. math::
         \bar u(\bar x, \bar t; \beta,\gamma) = e^{-\beta\bar x}\sin(\beta\bar x - \gamma\bar t){\thinspace .}

The three choices of :math:`\gamma`, implied by the three choices of :math:`t_c`, are

.. _Eq:scale:heat:daynight:gamma3:

.. math::

    \tag{151}
    \gamma = \left\lbrace\begin{array}{ll}
        1, & t_c=1/\omega,\\ 
        2, & t_c = 2/\omega,\\ 
        2\beta^2, & t_c = L^2/{\alpha},\ x_c=L
        \end{array}\right.
        
        

The former two choices leaves only :math:`\beta` as parameter in :math:`\bar u`,
and with :math:`x_c=1/b` as length scale, :math:`\beta` becomes unity, and there
are no parameters in the dimensionless solution:

.. _Eq:scale:heat:daynight:xcb:

.. math::

    \tag{152}
    \bar u(\bar x, \bar t) = e^{-\bar x}\sin(\bar x - \bar t){\thinspace .}
        
        

Therefore, :math:`x_c=1/b` and :math:`t_c=1/\omega` (or :math:`t_c=2/\omega`, but the
factor 2 is of no importance) are the most appropriate scales.

To further argue why :ref:`(152) <Eq:scale:heat:daynight:xcb>` demonstrates
that these scales are
preferred, think of
:math:`\omega` as large. Then the wave is damped over a short
distance and there will be a thin boundary layer of temperature
oscillations near :math:`x=0` and little changes in :math:`u` in the rest of
the domain. The scaling :ref:`(152) <Eq:scale:heat:daynight:xcb>` resolves
this problem by using :math:`1/b \sim \omega^{-1/2}` as length scale,
because then the boundary layer thickness is independent of
:math:`\omega`. The length of the domain can be chosen as, e.g., :math:`4/b`
such that :math:`\bar u\approx 0` at the end :math:`x=L`. The length scale :math:`1/b`
helps us to zoom in on the part of :math:`u` where significant changes
take place.

In the other limit, :math:`\omega` small, :math:`b` becomes small, and the wave is
hardly damped in the domain :math:`[0,L]` unless :math:`L` is large enough.  The
imposed boundary condition on :math:`x=L` in fact requires :math:`u` to be
approximately constant so its derivative vanishes, and this property
can only be obtained if :math:`L` is large enough to ensure that the wave
becomes significantly damped.  Therefore, the length scale is dictated
by :math:`b`, not :math:`L`, and :math:`L` should be adapted to :math:`b`, typically :math:`L\geq
4/b`.

The resulting scaled problem becomes

.. _Eq:scale:heat:pde2:d:

.. math::

    \tag{153}
    \frac{\partial \bar u}{\partial \bar t} =
        \frac{1}{2}\frac{\partial^2 u}{\partial x^2},
        \quad  \bar x\in (0,4/b),\ \bar t\in (0,\bar T],
        
        

.. _Eq:scale:heat:pde2:ic:u:d:

.. math::

    \tag{154}
    \bar u(\bar x,0) = 0,
        \quad \bar x\in [0,1]
        
        

.. _Eq:scale:heat:pde2:bc:0:d:

.. math::

    \tag{155}
    \bar u(0,\bar t)  = \sin(\bar t),
        \quad  \bar t\in (0,\bar T],
        
        

.. _Eq:scale:heat:pde2:bc:L:d:

.. math::

    \tag{156}
    \frac{\partial}{\partial\bar x}\bar u(1,\bar t)  = 0,
        \quad \bar t\in (0,\bar T].
        
        

The coefficient in front of the second-derivative is :math:`\frac{1}{2}` because

.. math::
         \frac{t_c{\alpha}}{1/b^2} = \frac{b^2{\alpha}}{\omega}
        = \frac{1}{2}{\thinspace .}

We may, of course, choose :math:`t_c=2/\omega` and get rid of the :math:`\frac{1}{2}` factor,
if desired, but then it turns up in :ref:`(155) <Eq:scale:heat:pde2:bc:0:d>` instead,
as :math:`\sin (2\bar t)`.

.. _sec:scale:diffu:Fisher:

Reaction-diffusion equations
============================

Fisher's equation
-----------------

Fisher's equation is essentially the logistic equation at each point
for population dynamics (see the section :ref:`sec:scale:decay:nonlinear`)
combined with spatial movement through ordinary diffusion:

.. _Eq:sec:scale:diffu:Fisher:pde:

.. math::

    \tag{157}
    \frac{\partial u}{\partial t} =
        {\alpha}\frac{\partial^2 u}{\partial x^2} + \varrho u(1-u/M)
        {\thinspace .}
        
        

This PDE is also known as the KPP equation after
Kolmogorov, Petrovsky, and Piskynov (who introduced the equation
independently of Fisher).

Setting

.. math::
         \bar x = \frac{x}{x_c},\quad
        \ \bar t = \frac{t}{t_c}, \quad\bar u =\frac{u}{u_c},

results in

.. math::
        
        \frac{\partial \bar u}{\partial \bar t} =
        \frac{t_c{\alpha}}{x_c^2}
        \frac{\partial^2 u}{\partial x^2} + t_c \varrho \bar u (1 - u_c\bar u/M){\thinspace .}
        

Balance of all terms
~~~~~~~~~~~~~~~~~~~~

If all terms are equally important, the scales can be determined from
demanding the coefficients to be unity.
Reasoning as for the logistic ODE in the section :ref:`sec:scale:decay:nonlinear`,
we may choose :math:`t_c=1/\varrho`. Then
the coefficient in the diffusion term dictates the length scale :math:`x_c =
\sqrt{t_c{\alpha}}`.
A natural scale for :math:`u` is :math:`M`, since :math:`M` is the upper limit of :math:`u` in
the model (cf. the logistic term). Summarizing,

.. math::
         u_c=M,\quad t_c = \frac{1}{\varrho},\quad x_c = \sqrt{\frac{{\alpha}}{\varrho}},
        

and the scaled PDE becomes

.. _Eq:_auto36:

.. math::

    \tag{158}
    \frac{\partial \bar u}{\partial \bar t} =
        \frac{\partial^2 \bar u}{\partial x^2} + \bar u (1 - \bar u){\thinspace .}
        
        

With this scaling, the length scale :math:`x_c=\sqrt{{\alpha}/\varrho}`
is not related to the domain size, so the scale is particularly relevant for
infinite domains.

An open question is whether the time scale should be based on
the diffusion process rather than the initial exponential growth
in the logistic term. The diffusion time scale means :math:`t_c = x_c^2/{\alpha}`,
but demanding the logistic term then to have a unit coefficient
forces :math:`x_c^2\varrho /{\alpha} = 1`, which implies :math:`x_c=\sqrt{{\alpha}/\varrho}`
and :math:`t_c=1/\varrho`. That is, equal balance of the three
terms gives a unique choice of the time and length scale.

Fixed length scale
~~~~~~~~~~~~~~~~~~

Assume now that we fix the length scale to be :math:`L`, either the
domain size or some other naturally given length. With
:math:`x_c=L`, :math:`t_c=\varrho^{-1}`,
:math:`u_c=M`, we get

.. _Eq:_auto37:

.. math::

    \tag{159}
    \frac{\partial \bar u}{\partial \bar t} =
        \beta
        \frac{\partial^2 \bar u}{\partial x^2} + \bar u (1 - \bar u),
        
        

where :math:`\beta` is a dimensionless number

.. math::
         \beta = \frac{{\alpha}}{\varrho L^2} = \frac{\varrho^{-1}}{L^2/{\alpha}}{\thinspace .}

The last equality demonstrates
that :math:`\beta` measures the ratio of the time scale
for exponential growth in the beginning of the logistic process
and the time scale of diffusion :math:`L^2/{\alpha}` (i.e., the time it takes
to transport a signal by diffusion through the domain).
For small :math:`\beta` we can neglect the diffusion and spatial movements,
and the PDE is essentially a logistic ODE at each point, while for
large :math:`\beta`, diffusion dominates, and :math:`t_c` should in that case be
based on the diffusion time scale :math:`L^2/{\alpha}`. This leads to the
scaled PDE

.. _Eq:_auto38:

.. math::

    \tag{160}
    \frac{\partial \bar u}{\partial \bar t} =
        \frac{\partial^2 \bar u}{\partial x^2} + \beta^{-1}\bar u (1 - \bar u),
        
        

showing that a large :math:`\beta` encourages omission of the logistic term,
because the point-wise growth takes place over long time intervals while
diffusion is rapid. The effect of diffusion is then more prominent
and it suffices to solve :math:`\bar u_{\bar t} = \bar u_{\bar x\bar x}`.

Nonlinear reaction-diffusion PDE
--------------------------------

A general, nonlinear reaction-diffusion equation in 1D looks like

.. _Eq:_auto39:

.. math::

    \tag{161}
    \frac{\partial u}{\partial t} = {\alpha}\frac{\partial^2 u}{\partial x^2} + f(u)
        {\thinspace .}
        
        

By scaling the nonlinear reaction term :math:`f(u)` as :math:`f_c\bar f(u_c\bar u)`,
where :math:`f_c` is a characteristic size of :math:`f(u)`, typically the maximum
value, one gets a non-dimensional PDE like

.. math::
        
        \frac{\partial\bar u}{\partial\bar t} = \frac{t_c{\alpha}}{x_c^2}
        \frac{\partial^2\bar u}{\partial\bar x^2} +
        \frac{t_cf_c}{u_c}\bar f(u_c\bar u){\thinspace .}
        

The characteristic size of :math:`u` can often be derived so we first assume
that :math:`u_c` is given. This fact uniquely determines the space and time
scales by demanding that all three terms are equally important and
of unit size:

.. math::
         t_c = \frac{u_c}{f_c},\quad x_c = \sqrt{\frac{{\alpha} u_c}{f_c}}{\thinspace .}

The corresponding PDE reads

.. _Eq:_auto40:

.. math::

    \tag{162}
    \frac{\partial\bar u}{\partial\bar t} =
        \frac{\partial^2\bar u}{\partial\bar x^2} + \bar f(u_c\bar u){\thinspace .}
        
        

If :math:`x_c` is based on some known length scale :math:`L`, balance of all three
terms can be used to determine :math:`u_c` and :math:`t_c`:

.. math::
         t_c = \frac{L^2}{{\alpha}},\quad u_c = \frac{L^2 f_c}{{\alpha}}{\thinspace .}

This scaling only works if :math:`f` is nonlinear, otherwise :math:`u_c` cancels
and there is no freedom to constrain this scale.

With given :math:`L` and :math:`u_c`, there are two choices of :math:`t_c` since it can
be based on the diffusion or the reaction time scales. With
the reaction scale, :math:`t_c = u_c/f_c`, one arrives a the PDE

.. _Eq:_auto41:

.. math::

    \tag{163}
    \frac{\partial\bar u}{\partial\bar t} =
        \beta\frac{\partial^2\bar u}{\partial\bar x^2} + \bar f(u_c\bar u),
        
        

where

.. math::
         \beta = \frac{{\alpha} u_c}{L^2 f_c} = \frac{u_c/f_c}{L^2/{\alpha}}

is a dimensionless number reflecting the ratio of the reaction time
scale and the diffusion time scale. On the contrary,
with the
diffusion time scale, :math:`t_c=L^2/{\alpha}`, the scaled PDE becomes

.. _Eq:_auto42:

.. math::

    \tag{164}
    \frac{\partial\bar u}{\partial\bar t} =
        \frac{\partial^2\bar u}{\partial \bar x^2} + \beta^{-1}\bar f(u_c\bar u){\thinspace .}
        
        

The size of :math:`\beta` in an application will determine which of the scalings
that is most appropriate.

